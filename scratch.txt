Running with debug mode turned ON...

ModVersion Info:
 - Java version (1.8.0_144)
 - Slay the Spire (01-27-2020)
 - ModTheSpire (3.16.0)
Mod list:
 - basemod (5.23.2)
 - Friendly_Minions_0987678 (0.1.2)
 - souleater (0.0.1)

Begin patching...
Patching enums...Done.
Finding core patches...
Finding patches...
Patching Overrides...
Class: [basemod.abstracts.CustomPlayer]
 - Overriding [com.megacrit.cardcrawl.characters.AbstractPlayer.updateEscapeAnimation()]
      Fixing invocations in superclass AbstractPlayer...
        @ 518
      Replacing SpireSuper calls...
        @ 317
 { super.updateEscapeAnimation();
$_ = null; }
Class: [basemod.abstracts.CustomMonster]
 - Overriding [com.megacrit.cardcrawl.monsters.AbstractMonster.renderDamageRange(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
      Fixing invocations in superclass AbstractMonster...
        @ 929
      Replacing SpireSuper calls...
        @ 116
 { super.renderDamageRange(((com.badlogic.gdx.graphics.g2d.SpriteBatch) $1[0]));
$_ = null; }
 - Overriding [com.megacrit.cardcrawl.monsters.AbstractMonster.renderIntentVfxBehind(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
      Fixing invocations in superclass AbstractMonster...
        @ 926
      Replacing SpireSuper calls...
        @ 122
 { super.renderIntentVfxBehind(((com.badlogic.gdx.graphics.g2d.SpriteBatch) $1[0]));
$_ = null; }
 - Overriding [com.megacrit.cardcrawl.monsters.AbstractMonster.renderIntent(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
      Fixing invocations in superclass AbstractMonster...
        @ 927
      Replacing SpireSuper calls...
        @ 128
 { super.renderIntent(((com.badlogic.gdx.graphics.g2d.SpriteBatch) $1[0]));
$_ = null; }
 - Overriding [com.megacrit.cardcrawl.monsters.AbstractMonster.renderIntentVfxAfter(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
      Fixing invocations in superclass AbstractMonster...
        @ 928
      Replacing SpireSuper calls...
        @ 134
 { super.renderIntentVfxAfter(((com.badlogic.gdx.graphics.g2d.SpriteBatch) $1[0]));
$_ = null; }
 - Overriding [com.megacrit.cardcrawl.monsters.AbstractMonster.renderName(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
      Fixing invocations in superclass AbstractMonster...
        @ 940
      Replacing SpireSuper calls...
        @ 140
 { super.renderName(((com.badlogic.gdx.graphics.g2d.SpriteBatch) $1[0]));
$_ = null; }
Class: [basemod.abstracts.CustomCard]
 - Overriding [com.megacrit.cardcrawl.cards.AbstractCard.renderTitle(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
      Fixing invocations in superclass AbstractCard...
        @ 1249
        @ 1299
      Replacing SpireSuper calls...
        @ 442
 { super.renderTitle(((com.badlogic.gdx.graphics.g2d.SpriteBatch) $1[0]));
$_ = null; }
        @ 448
 { super.renderTitle(((com.badlogic.gdx.graphics.g2d.SpriteBatch) $1[0]));
$_ = null; }
Injecting patches...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch$SaveField]
 - Patching [com.megacrit.cardcrawl.saveAndContinue.SaveFile]
 - Adding Field: public java.lang.Integer maxHandSize_235;
   - Copying annotation: @com.google.gson.annotations.SerializedName(value="basemod:max_hand_size")
{
if (maxHandSize == null) { maxHandSize = new com.evacipated.cardcrawl.modthespire.lib.SpireField(null); }
maxHandSize.initialize(com.megacrit.cardcrawl.saveAndContinue.SaveFile.class, "maxHandSize_235");
}


Patch Class: [basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves]
 - Patching [com.megacrit.cardcrawl.saveAndContinue.SaveFile]
 - Adding Field: public basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$HashMapOfJsonElement modSaves_750;
   - Copying annotation: @com.google.gson.annotations.SerializedName(value="basemod:mod_saves")
{
if (modSaves == null) { modSaves = new com.evacipated.cardcrawl.modthespire.lib.SpireField(null); }
modSaves.initialize(com.megacrit.cardcrawl.saveAndContinue.SaveFile.class, "modSaves_750");
}
 - Adding Field: public basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$ArrayListOfJsonElement modCardSaves_968;
   - Copying annotation: @com.google.gson.annotations.SerializedName(value="basemod:mod_card_saves")
{
if (modCardSaves == null) { modCardSaves = new com.evacipated.cardcrawl.modthespire.lib.SpireField(null); }
modCardSaves.initialize(com.megacrit.cardcrawl.saveAndContinue.SaveFile.class, "modCardSaves_968");
}
 - Adding Field: public basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$ArrayListOfJsonElement modRelicSaves_820;
   - Copying annotation: @com.google.gson.annotations.SerializedName(value="basemod:mod_relic_saves")
{
if (modRelicSaves == null) { modRelicSaves = new com.evacipated.cardcrawl.modthespire.lib.SpireField(null); }
modRelicSaves.initialize(com.megacrit.cardcrawl.saveAndContinue.SaveFile.class, "modRelicSaves_820");
}
 - Adding Field: public basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$ArrayListOfJsonElement modPotionSaves_799;
   - Copying annotation: @com.google.gson.annotations.SerializedName(value="basemod:mod_potion_saves")
{
if (modPotionSaves == null) { modPotionSaves = new com.evacipated.cardcrawl.modthespire.lib.SpireField(null); }
modPotionSaves.initialize(com.megacrit.cardcrawl.saveAndContinue.SaveFile.class, "modPotionSaves_799");
}
 - Adding Field: public basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$ArrayListOfJsonElement cardModifierSaves_344;
   - Copying annotation: @com.google.gson.annotations.SerializedName(value="basemod:abstract_card_modifiers_save")
{
if (cardModifierSaves == null) { cardModifierSaves = new com.evacipated.cardcrawl.modthespire.lib.SpireField(null); }
cardModifierSaves.initialize(com.megacrit.cardcrawl.saveAndContinue.SaveFile.class, "cardModifierSaves_344");
}
 - Adding Field: public basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves$ArrayListOfString eventSaves_642;
   - Copying annotation: @com.google.gson.annotations.SerializedName(value="basemod:event_saves")
{
if (eventSaves == null) { eventSaves = new com.evacipated.cardcrawl.modthespire.lib.SpireField(null); }
eventSaves.initialize(com.megacrit.cardcrawl.saveAndContinue.SaveFile.class, "eventSaves_642");
}


Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierFields]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.util.ArrayList cardModifiers_218;
{
if (cardModifiers == null) { cardModifiers = new com.evacipated.cardcrawl.modthespire.lib.SpireField(null); }
cardModifiers.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "cardModifiers_218");
}


Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.GridCardSelectScreenFields]
 - Patching [com.megacrit.cardcrawl.screens.select.GridCardSelectScreen]
 - Adding Field: public java.lang.Boolean forCustomReward_662;
{
if (forCustomReward == null) { forCustomReward = new com.evacipated.cardcrawl.modthespire.lib.SpireField(null); }
forCustomReward.initialize(com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.class, "forCustomReward_662");
}
 - Adding Field: public basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.GridCardSelectScreenFields$GridCallback customCallback_290;
{
if (customCallback == null) { customCallback = new com.evacipated.cardcrawl.modthespire.lib.SpireField(null); }
customCallback.initialize(com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.class, "customCallback_290");
}


Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$Scale]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard]
 - Adding Field: public java.lang.Float descriptionScale_786;
{
if (descriptionScale == null) { descriptionScale = new com.evacipated.cardcrawl.modthespire.lib.SpireField(null); }
descriptionScale.initialize(com.megacrit.cardcrawl.cards.AbstractCard.class, "descriptionScale_786");
}


Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$IsScrolling]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper]
 - Adding Field: public static java.lang.Float isScrolling_581;
{
if (isScrolling == null) { isScrolling = new com.evacipated.cardcrawl.modthespire.lib.StaticSpireField(null); }
isScrolling.initialize(com.megacrit.cardcrawl.helpers.TipHelper.class, "isScrolling_581");
}


Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.SeenEvents]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer]
 - Adding Field: public java.util.HashSet seenEvents_0;
{
if (seenEvents == null) { seenEvents = new com.evacipated.cardcrawl.modthespire.lib.SpireField(null); }
seenEvents.initialize(com.megacrit.cardcrawl.characters.AbstractPlayer.class, "seenEvents_0");
}


Patch Class: [kobting.friendlyminions.patches.MonsterAddFieldsPatch]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster]
 - Adding Field: public kobting.friendlyminions.monsters.AbstractFriendlyMonster f_target_126;
{
if (f_target == null) { f_target = new com.evacipated.cardcrawl.modthespire.lib.SpireField(null); }
f_target.initialize(com.megacrit.cardcrawl.monsters.AbstractMonster.class, "f_target_126");
}


Patch Class: [kobting.friendlyminions.patches.PlayerAddFieldsPatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer]
 - Adding Field: public java.lang.Integer f_baseMinions_75;
{
if (f_baseMinions == null) { f_baseMinions = new com.evacipated.cardcrawl.modthespire.lib.SpireField(null); }
f_baseMinions.initialize(com.megacrit.cardcrawl.characters.AbstractPlayer.class, "f_baseMinions_75");
}
 - Adding Field: public java.lang.Integer f_maxMinions_305;
{
if (f_maxMinions == null) { f_maxMinions = new com.evacipated.cardcrawl.modthespire.lib.SpireField(null); }
f_maxMinions.initialize(com.megacrit.cardcrawl.characters.AbstractPlayer.class, "f_maxMinions_305");
}
 - Adding Field: public com.megacrit.cardcrawl.monsters.MonsterGroup f_minions_775;
{
if (f_minions == null) { f_minions = new com.evacipated.cardcrawl.modthespire.lib.SpireField(null); }
f_minions.initialize(com.megacrit.cardcrawl.characters.AbstractPlayer.class, "f_minions_775");
}


Patch Class: [com.evacipated.cardcrawl.modthespire.patches.DisableGdxForceExit]
 - Patching [com.badlogic.gdx.backends.lwjgl.LwjglApplication.mainLoop()]
 - Adding Insert @ 248...

{
com.evacipated.cardcrawl.modthespire.patches.DisableGdxForceExit.Insert($0);
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.modsscreen.MainMenuItem]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen.setMainMenuButtons()]
 - Adding Insert @ r4 (abs:147)...

{
int[] __param2 = new int[1];
__param2[0] = index;
com.evacipated.cardcrawl.modthespire.patches.modsscreen.MainMenuItem.Insert($0, __param2);
index = __param2[0];
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.CreditsModList]
 - Patching [com.megacrit.cardcrawl.credits.CreditsScreen()]
 - Adding Insert @ r5 (abs:56)...

{
float[] __param2 = new float[1];
__param2[0] = tmpY;
com.evacipated.cardcrawl.modthespire.patches.CreditsModList.Insert($0, __param2);
tmpY = __param2[0];
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.modsscreen.SaveBaseModBadges]
 - Patching [basemod.BaseMod.registerModBadge(com.badlogic.gdx.graphics.Texture,java.lang.String,java.lang.String,java.lang.String,basemod.ModPanel)]
 - Adding Insert @ r8 (abs:753)...

{
com.evacipated.cardcrawl.modthespire.patches.modsscreen.SaveBaseModBadges.Insert($1, $2, $3, $4, $5, badge);
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.TopPanelModList$Render]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1066...

{
com.evacipated.cardcrawl.modthespire.patches.TopPanelModList$Render.Insert($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.RenderHooks$RenderHook]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.render()]
 - Adding Insert @ 457...

{
basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.RenderHooks$RenderHook.Insert($0, sb);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnApplyPowers]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Insert @ 3181...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnApplyPowers.multiDamageFinalInsert($0, tmp, i);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.MultiwordKeywords$InitializeDescription]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescription()]
 - Adding Insert @ 578...

{
java.lang.String[] __param2 = new java.lang.String[1];
__param2[0] = word;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.MultiwordKeywords$InitializeDescription.Insert($0, __param2, keywordTmp);
word = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.FontHelper.AllowSmartTextsToRemoveSpaces$RenderSmartTextPatch]
 - Patching [com.megacrit.cardcrawl.helpers.FontHelper.renderSmartText(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.String,float,float,float,float,com.badlogic.gdx.graphics.Color)]
 - Adding Insert @ 875...

{
java.lang.String[] __param9 = new java.lang.String[1];
__param9[0] = word;
basemod.patches.com.megacrit.cardcrawl.helpers.FontHelper.AllowSmartTextsToRemoveSpaces$RenderSmartTextPatch.InsertRemoveSpecialWord($1, $2, $3, $4, $5, $6, $7, $8, __param9);
word = __param9[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CNCardTextColors]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescriptionCN()]
 - Adding Insert @ 719...

{
java.lang.String[] __param2 = new java.lang.String[1];
__param2[0] = word;
float[] __param3 = new float[1];
__param3[0] = currentWidth;
int[] __param4 = new int[1];
__param4[0] = numLines;
java.lang.StringBuilder[] __param5 = new java.lang.StringBuilder[1];
__param5[0] = sbuilder;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CNCardTextColors.Insert($0, __param2, __param3, __param4, __param5, CN_DESC_BOX_WIDTH);
word = __param2[0];
currentWidth = __param3[0];
numLines = __param4[0];
sbuilder = __param5[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.FontHelper.AllowSmartTextsToRemoveSpaces$RenderSmartTextPatch]
 - Patching [com.megacrit.cardcrawl.helpers.FontHelper.renderSmartText(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.String,float,float,float,float,com.badlogic.gdx.graphics.Color)]
 - Adding Insert @ 906...

{
float[] __param9 = new float[1];
__param9[0] = curWidth;
basemod.patches.com.megacrit.cardcrawl.helpers.FontHelper.AllowSmartTextsToRemoveSpaces$RenderSmartTextPatch.InsertRemoveSpace($1, $2, $3, $4, $5, $6, $7, $8, __param9, spaceWidth);
curWidth = __param9[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.FontHelper.AllowSmartTextsToRemoveSpaces$GetSmartHeightPatch]
 - Patching [com.megacrit.cardcrawl.helpers.FontHelper.getSmartHeight(com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.String,float,float)]
 - Adding Insert @ 971...

{
java.lang.String[] __param5 = new java.lang.String[1];
__param5[0] = word;
basemod.patches.com.megacrit.cardcrawl.helpers.FontHelper.AllowSmartTextsToRemoveSpaces$GetSmartHeightPatch.Insert($1, $2, $3, $4, __param5);
word = __param5[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$FixEForChinese]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescriptionCN()]
 - Adding Insert @ 741...

{
java.lang.String[] __param2 = new java.lang.String[1];
__param2[0] = word;
float[] __param3 = new float[1];
__param3[0] = currentWidth;
java.lang.StringBuilder[] __param4 = new java.lang.StringBuilder[1];
__param4[0] = sbuilder;
int[] __param5 = new int[1];
__param5[0] = numLines;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$FixEForChinese.Insert($0, __param2, __param3, __param4, __param5, CARD_ENERGY_IMG_WIDTH, CN_DESC_BOX_WIDTH);
word = __param2[0];
currentWidth = __param3[0];
sbuilder = __param4[0];
numLines = __param5[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AdditionalEventConditions$SpecialEventConditions]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.getShrine(com.megacrit.cardcrawl.random.Random)]
 - Adding Insert @ 2416...

{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AdditionalEventConditions$SpecialEventConditions.insert($1, tmp);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AdditionalEventConditions$NormalEventConditions]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.getEvent(com.megacrit.cardcrawl.random.Random)]
 - Adding Insert @ 2467...

{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AdditionalEventConditions$NormalEventConditions.insert($1, tmp);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterTmp]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderDescription(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ r31 (abs:2061)...

{
java.lang.String[] __param3 = new java.lang.String[1];
__param3[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterTmp.Insert($0, $1, __param3);
tmp = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.TitleFontSize$GrabFontFile]
 - Patching [com.megacrit.cardcrawl.helpers.FontHelper.initialize()]
 - Adding Insert @ 255...

{
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.TitleFontSize$GrabFontFile.Insert(fontFile);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.FakeKeywords]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderTips(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1783...

{
java.util.ArrayList[] __param4 = new java.util.ArrayList[1];
__param4[0] = t;
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.FakeKeywords.InsertAfter($0, $1, card, __param4);
t = __param4[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CNUniqueKeywords]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescriptionCN()]
 - Adding Insert @ 619...

{
java.lang.String[] __param2 = new java.lang.String[1];
__param2[0] = word;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CNUniqueKeywords.Insert($0, __param2);
word = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.ModalChoiceScreenUpdateRender$Render]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2684...

{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.ModalChoiceScreenUpdateRender$Render.Insert($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.actions.GameActionManager.OnPlayerLoseBlockToggle]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.getNextAction()]
 - Adding Insert @ 466...

{
basemod.patches.com.megacrit.cardcrawl.actions.GameActionManager.OnPlayerLoseBlockToggle.InsertPost($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.RenderBoxEnergy]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderBox(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.String,float,float)]
 - Adding Insert @ 376...

{
com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion[] __param6 = new com.badlogic.gdx.graphics.g2d.TextureAtlas$AtlasRegion[1];
__param6[0] = currentOrb;
basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.RenderBoxEnergy.Insert($1, $2, $3, $4, card, __param6);
currentOrb = __param6[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen.FixCharacterFilter$ResetRunsDropdown]
 - Patching [com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen.resetRunsDropdown()]
 - Adding Insert @ r34 (abs:273)...

{
boolean[] __param2 = new boolean[1];
__param2[0] = includeMe;
basemod.patches.com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen.FixCharacterFilter$ResetRunsDropdown.Insert($0, __param2, data);
includeMe = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.ModalChoiceScreenUpdateRender$Update]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.update()]
 - Adding Insert @ 2508...

{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.ModalChoiceScreenUpdateRender$Update.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierCalculateCardDamage]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3262...

{
float[] __param3 = new float[1];
__param3[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierCalculateCardDamage.damageFinalInsert($0, $1, __param3);
tmp = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderFixSwitches$RenderOuterGlowSwitch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderOuterGlow(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ r9 (abs:1337)...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderFixSwitches$RenderOuterGlowSwitch.Insert($0, $1, current_x, current_y, tintColor);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.InitializeCardPoolsSwitch]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.initializeCardPools()]
 - Adding Insert @ 1435...

{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.InitializeCardPoolsSwitch.Insert($0, tmpPool);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.InstantObtainRelicGetHook]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.instantObtain(com.megacrit.cardcrawl.characters.AbstractPlayer,int,boolean)]
 - Adding Insert @ 235...

{
basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.InstantObtainRelicGetHook.Insert($0, $1, $2, $3);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierCalculateCardDamage]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3326...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierCalculateCardDamage.multiDamageFinalInsert($0, $1, tmp, i);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.actions.common.ApplyPowerAction.ApplyPowerActionPostPowerApplyHook]
 - Patching [com.megacrit.cardcrawl.actions.common.ApplyPowerAction.update()]
 - Adding Insert @ r6 (abs:147)...

{
basemod.patches.com.megacrit.cardcrawl.actions.common.ApplyPowerAction.ApplyPowerActionPostPowerApplyHook.Insert($0, powerToApply, target, source);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.CardGroup.MoveToExhaustPileHook]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.moveToExhaustPile(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Insert @ r6 (abs:944)...

{
basemod.patches.com.megacrit.cardcrawl.cards.CardGroup.MoveToExhaustPileHook.Insert($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.panels.PotionPopUp.PrePotionUseHook]
 - Patching [com.megacrit.cardcrawl.ui.panels.PotionPopUp.updateInput()]
 - Adding Insert @ 283...

{
basemod.patches.com.megacrit.cardcrawl.ui.panels.PotionPopUp.PrePotionUseHook.Insert($0, potion);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.CustomBosses$Ascension20DoubleBoss]
 - Patching [com.megacrit.cardcrawl.ui.buttons.ProceedButton.update()]
 - Adding Insert @ 116...

{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.CustomBosses$Ascension20DoubleBoss.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnUseCard]
 - Patching [com.megacrit.cardcrawl.actions.utility.UseCardAction(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.core.AbstractCreature)]
 - Adding Insert @ 46...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnUseCard.Insert($0, $1, $2);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.ReorganizeObtainRelicGetHook]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.reorganizeObtain(com.megacrit.cardcrawl.characters.AbstractPlayer,int,boolean,int)]
 - Adding Insert @ 202...

{
basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.ReorganizeObtainRelicGetHook.Insert($0, $1, $2, $3, $4);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch$Save]
 - Patching [com.megacrit.cardcrawl.saveAndContinue.SaveAndContinue.save(com.megacrit.cardcrawl.saveAndContinue.SaveFile)]
 - Adding Insert @ 140...

{
java.util.HashMap[] __param2 = new java.util.HashMap[1];
__param2[0] = params;
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch$Save.Insert($1, __param2);
params = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnApplyPowers]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Insert @ 3168...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnApplyPowers.multiDamageInsert($0, tmp, i);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$RenderHeaders]
 - Patching [com.megacrit.cardcrawl.screens.custom.CustomModeScreen.renderScreen(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 563...

{
float[] __param3 = new float[1];
__param3[0] = scrollY;
basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$RenderHeaders.InsertBefore($0, $1, __param3);
scrollY = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.AbstractCreature.PlayerMaxHPChange$Increase]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.increaseMaxHp(int,boolean)]
 - Adding Insert @ 210...

{
int[] __param4 = new int[1];
__param4[0] = amount;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.core.AbstractCreature.PlayerMaxHPChange$Increase.Insert($0, $1, $2, __param4);
amount = __param4[0];
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierApplyPowersToBlock]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowersToBlock()]
 - Adding Insert @ 3209...

{
float[] __param2 = new float[1];
__param2[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierApplyPowersToBlock.blockInsert($0, __param2);
tmp = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierWhenDrawn]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.draw(int)]
 - Adding Insert @ 2052...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierWhenDrawn.Insert($0, $1, c);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.AlternateCardCosts$AlternateCostsHasEnoughAlternateResource]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.hasEnoughEnergy()]
 - Adding Insert @ 1053...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.AlternateCardCosts$AlternateCostsHasEnoughAlternateResource.Insert($0);
if (opt.isPresent()) { return ( (Boolean)opt.get()).booleanValue(); }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DamageHooks$ApplyPowers]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Insert @ 3122...

{
float[] __param2 = new float[1];
__param2[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DamageHooks$ApplyPowers.Insert($0, __param2);
tmp = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.CustomActionHooks$resetFlagsOnClose]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.closeCurrentScreen()]
 - Adding Insert @ 2891...

{
basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.CustomActionHooks$resetFlagsOnClose.Insert();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.FixEnergyTooltip]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderTips(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1777...

{
java.lang.String[] __param3 = new java.lang.String[1];
__param3[0] = s;
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.FixEnergyTooltip.Insert($0, $1, __param3);
s = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch$Load]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.loadPlayerSave(com.megacrit.cardcrawl.characters.AbstractPlayer)]
 - Adding Insert @ 1092...

{
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch$Load.Insert($0, $1, saveFile);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DamageHooks$ApplyPowersMulti]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Insert @ 3168...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DamageHooks$ApplyPowersMulti.Insert($0, tmp, i);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PostDrawHook]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.draw(int)]
 - Adding Insert @ 2061...

{
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PostDrawHook.Insert($0, $1, c);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierCalculateCardDamage]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3304...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierCalculateCardDamage.multiDamageInsert($0, $1, tmp, i);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$Update]
 - Patching [com.megacrit.cardcrawl.screens.custom.CustomModeScreen.update()]
 - Adding Insert @ 299...

{
float[] __param2 = new float[1];
__param2[0] = scrollY;
basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$Update.InsertBefore($0, __param2);
scrollY = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.DescriptionLine.CustomDynamicVariableTokenizeCN]
 - Patching [com.megacrit.cardcrawl.cards.DescriptionLine.tokenizeCN(java.lang.String)]
 - Adding Insert @ 45...

{
basemod.patches.com.megacrit.cardcrawl.cards.DescriptionLine.CustomDynamicVariableTokenizeCN.Insert($1, tokenized, i);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.rooms.AbstractRoom.StartBattleHook]
 - Patching [com.megacrit.cardcrawl.rooms.AbstractRoom.update()]
 - Adding Insert @ 295...

{
basemod.patches.com.megacrit.cardcrawl.rooms.AbstractRoom.StartBattleHook.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ShrinkLongDescription$ShiftSizeLineDescription]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderDescription(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1042...

{
float[] __param4 = new float[1];
__param4[0] = draw_y;
com.badlogic.gdx.graphics.g2d.BitmapFont[] __param5 = new com.badlogic.gdx.graphics.g2d.BitmapFont[1];
__param5[0] = font;
float[] __param6 = new float[1];
__param6[0] = current_x;
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ShrinkLongDescription$ShiftSizeLineDescription.Insert($0, $1, card, __param4, __param5, __param6);
draw_y = __param4[0];
font = __param5[0];
current_x = __param6[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.FakeKeywords]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderTips(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 1776...

{
java.util.ArrayList[] __param4 = new java.util.ArrayList[1];
__param4[0] = t;
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.FakeKeywords.InsertBefore($0, $1, card, __param4);
t = __param4[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$Update]
 - Patching [com.megacrit.cardcrawl.screens.custom.CustomModeScreen.update()]
 - Adding Insert @ 302...

{
float[] __param2 = new float[1];
__param2[0] = scrollY;
basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$Update.InsertAfter($0, __param2);
scrollY = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnApplyPowers]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Insert @ 3122...

{
float[] __param2 = new float[1];
__param2[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnApplyPowers.damageInsert($0, __param2);
tmp = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.RenderCustomDynamicVariableCN]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderDescriptionCN(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 894...

{
java.lang.String[] __param4 = new java.lang.String[1];
__param4[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.RenderCustomDynamicVariableCN.Insert($0, $1, card, __param4);
tmp = __param4[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.EnergyManager.PostEnergyRechargeHook]
 - Patching [com.megacrit.cardcrawl.core.EnergyManager.recharge()]
 - Adding Insert @ 47...

{
basemod.patches.com.megacrit.cardcrawl.core.EnergyManager.PostEnergyRechargeHook.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.CustomRewardLoad]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.loadPostCombat(com.megacrit.cardcrawl.saveAndContinue.SaveFile)]
 - Adding Insert @ 1037...

{
basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.CustomRewardLoad.Insert($0, $1, i);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PostInitializeStarterRelicsHookSwitch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.initializeStarterRelics(com.megacrit.cardcrawl.characters.AbstractPlayer$PlayerClass)]
 - Adding Insert @ r14 (abs:473)...

{
java.util.ArrayList[] __param3 = new java.util.ArrayList[1];
__param3[0] = relics;
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PostInitializeStarterRelicsHookSwitch.Insert($0, $1, __param3);
relics = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.AddSwitch]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.add(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Insert @ 986...

{
basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.AddSwitch.Insert($1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.actions.GameActionManager.GetNextActionHook]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.getNextAction()]
 - Adding Insert @ 306...

{
basemod.patches.com.megacrit.cardcrawl.actions.GameActionManager.GetNextActionHook.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.AlternateCardCosts$GetCardModifierCostString]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderEnergy(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2740...

{
java.lang.String[] __param3 = new java.lang.String[1];
__param3[0] = text;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.AlternateCardCosts$GetCardModifierCostString.Insert($0, $1, __param3, costColor);
text = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.UpdateHooks$PostUpdateHook]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.update()]
 - Adding Insert @ 900...

{
basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.UpdateHooks$PostUpdateHook.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierApplyPowersToBlock]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowersToBlock()]
 - Adding Insert @ 3213...

{
float[] __param2 = new float[1];
__param2[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierApplyPowersToBlock.blockFinalInsert($0, __param2);
tmp = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.actions.GameActionManager.OnPlayerLoseBlockToggle]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.getNextAction()]
 - Adding Insert @ 457...

{
basemod.patches.com.megacrit.cardcrawl.actions.GameActionManager.OnPlayerLoseBlockToggle.InsertPre($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.InitializeCharacterButtons]
 - Patching [com.megacrit.cardcrawl.screens.custom.CustomModeScreen.initializeCharacters()]
 - Adding Insert @ 268...

{
basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.InitializeCharacterButtons.Insert($0);
}

Patch Class: [basemod.patches.whatmod.PlayerPowerTips]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.renderPowerTips(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 820...

{
basemod.patches.whatmod.PlayerPowerTips.Insert($0, $1, p);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderCustomDynamicVariableCN]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderDescriptionCN(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2333...

{
java.lang.String[] __param3 = new java.lang.String[1];
__param3[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderCustomDynamicVariableCN.Insert($0, $1, __param3);
tmp = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.FontHelper.FixChineseNoPurpleColor]
 - Patching [com.megacrit.cardcrawl.helpers.FontHelper.exampleNonWordWrappedText(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.String,float,float,com.badlogic.gdx.graphics.Color,float,float)]
 - Adding Insert @ 1249...

{
java.lang.String[] __param9 = new java.lang.String[1];
__param9[0] = word;
basemod.patches.com.megacrit.cardcrawl.helpers.FontHelper.FixChineseNoPurpleColor.Insert($1, $2, $3, $4, $5, $6, $7, $8, __param9);
word = __param9[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.AbstractCreature.PlayerMaxHPChange$Decrease]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.decreaseMaxHealth(int)]
 - Adding Insert @ 227...

{
int[] __param3 = new int[1];
__param3[0] = amount;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.core.AbstractCreature.PlayerMaxHPChange$Decrease.Insert($0, $1, __param3);
amount = __param3[0];
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.FixColoredTextOffset]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescription()]
 - Adding Insert @ 519...
Adding Insert @ 524...
Adding Insert @ 529...
Adding Insert @ 534...
Adding Insert @ 539...
Adding Insert @ 545...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.FixColoredTextOffset.Insert($0, gl, word, sbuilder2);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.CombatRewardScreen.RewardsScrolling$RenderScissor]
 - Patching [com.megacrit.cardcrawl.screens.CombatRewardScreen.renderItemReward(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 266...

{
basemod.patches.com.megacrit.cardcrawl.screens.CombatRewardScreen.RewardsScrolling$RenderScissor.Insert($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.CustomCardsPatch]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.initialize()]
 - Adding Insert @ 419...

{
basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.CustomCardsPatch.Insert();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.TitleFontSize$UseCustomFontSize]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderTitle(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ r0 (abs:1379)...

{
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.TitleFontSize$UseCustomFontSize.Insert($0, $1, card);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AdditionalEventConditions$RemoveSeenEvents]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.getEvent(com.megacrit.cardcrawl.random.Random)]
 - Adding Insert @ 2472...

{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AdditionalEventConditions$RemoveSeenEvents.insert($1, tmpKey);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.ColorTabBarFix$Render]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.render(com.badlogic.gdx.graphics.g2d.SpriteBatch,float)]
 - Adding Insert @ 197...

{
basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.ColorTabBarFix$Render.Insert($0, $1, $2, curTab);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.EverythingFix$Initialize]
 - Patching [com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.initialize()]
 - Adding Insert @ 93...

{
basemod.patches.com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.EverythingFix$Initialize.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.RenderHooks$PostRenderHook]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.render()]
 - Adding Insert @ 493...

{
basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.RenderHooks$PostRenderHook.Insert($0, sb);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.UpdateHooks$PreUpdateHook]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.update()]
 - Adding Insert @ 767...

{
basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.UpdateHooks$PreUpdateHook.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.panels.PotionPopUp.PrePotionUseHookTargetMode]
 - Patching [com.megacrit.cardcrawl.ui.panels.PotionPopUp.updateTargetMode()]
 - Adding Insert @ 247...

{
basemod.patches.com.megacrit.cardcrawl.ui.panels.PotionPopUp.PrePotionUseHookTargetMode.Insert($0, potion);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderFixSwitches$RenderEnergySwitch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderEnergy(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2742...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderFixSwitches$RenderEnergySwitch.Insert($0, $1, text, font, costColor);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$UpdateScrollBar]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.updateInput()]
 - Adding Insert @ 276...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$UpdateScrollBar.Insert($0);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DamageHooks$CalculateCardDamage]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3246...

{
float[] __param3 = new float[1];
__param3[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DamageHooks$CalculateCardDamage.Insert($0, $1, __param3);
tmp = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterTmpCN]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderDescriptionCN(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ r35 (abs:2335)...

{
java.lang.String[] __param3 = new java.lang.String[1];
__param3[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterTmpCN.Insert($0, $1, __param3);
tmp = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveAndContinue.Save]
 - Patching [com.megacrit.cardcrawl.saveAndContinue.SaveAndContinue.save(com.megacrit.cardcrawl.saveAndContinue.SaveFile)]
 - Adding Insert @ 303...

{
basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveAndContinue.Save.Insert($1, params);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.actions.common.VampireDamageAllEnemiesAction.SafeDamageAllEnemies]
 - Patching [com.megacrit.cardcrawl.actions.unique.VampireDamageAllEnemiesAction.update()]
 - Adding Insert @ 33...

{
basemod.patches.com.megacrit.cardcrawl.actions.common.VampireDamageAllEnemiesAction.SafeDamageAllEnemies.checkSafety($0);
}

Patch Class: [basemod.patches.whatmod.MonsterPowerTips]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.renderTip(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 319...

{
basemod.patches.whatmod.MonsterPowerTips.Insert($0, $1, p);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AddEvents$SaveAndLoadShrineEvents]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon(java.lang.String,com.megacrit.cardcrawl.characters.AbstractPlayer,com.megacrit.cardcrawl.saveAndContinue.SaveFile)]
 - Adding Insert @ 413...

{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AddEvents$SaveAndLoadShrineEvents.insert($0, $1, $2, $3);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierStatEquivalentCopyModifiers]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.makeStatEquivalentCopy()]
 - Adding Insert @ 980...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierStatEquivalentCopyModifiers.Insert($0, card);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnRetained]
 - Patching [com.megacrit.cardcrawl.actions.unique.RestoreRetainedCardsAction.update()]
 - Adding Insert @ 26...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnRetained.Insert($0, e);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.panels.PotionPopUp.PostPotionUseHookTargetMode]
 - Patching [com.megacrit.cardcrawl.ui.panels.PotionPopUp.updateTargetMode()]
 - Adding Insert @ 257...

{
basemod.patches.com.megacrit.cardcrawl.ui.panels.PotionPopUp.PostPotionUseHookTargetMode.Insert($0, potion);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.MissingPortraitFix]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderPortrait(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 570...

{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.MissingPortraitFix.Insert($0, $1, card);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.panels.PotionPopUp.PostPotionUseHook]
 - Patching [com.megacrit.cardcrawl.ui.panels.PotionPopUp.updateInput()]
 - Adding Insert @ 287...

{
basemod.patches.com.megacrit.cardcrawl.ui.panels.PotionPopUp.PostPotionUseHook.Insert($0, potion);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.FixDescriptionWidthCustomDynamicVariableCN]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescriptionCN()]
 - Adding Insert @ 741...

{
java.lang.String[] __param2 = new java.lang.String[1];
__param2[0] = word;
float[] __param3 = new float[1];
__param3[0] = currentWidth;
java.lang.StringBuilder[] __param4 = new java.lang.StringBuilder[1];
__param4[0] = sbuilder;
int[] __param5 = new int[1];
__param5[0] = numLines;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.FixDescriptionWidthCustomDynamicVariableCN.Insert($0, __param2, __param3, __param4, __param5, CN_DESC_BOX_WIDTH);
word = __param2[0];
currentWidth = __param3[0];
sbuilder = __param4[0];
numLines = __param5[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$SetPlayerNamePatch]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.setPlayerName()]
 - Adding Insert @ 190...

{
basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$SetPlayerNamePatch.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierCalculateCardDamage]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3246...

{
float[] __param3 = new float[1];
__param3[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierCalculateCardDamage.damageInsert($0, $1, __param3);
tmp = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.actions.common.DamageAllEnemiesAction.SafeDamageAllEnemies]
 - Patching [com.megacrit.cardcrawl.actions.common.DamageAllEnemiesAction.update()]
 - Adding Insert @ 52...

{
basemod.patches.com.megacrit.cardcrawl.actions.common.DamageAllEnemiesAction.SafeDamageAllEnemies.checkSafety($0, utilizeBaseDamage);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierWhenExhausted]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.moveToExhaustPile(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Insert @ 944...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierWhenExhausted.Insert($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnApplyPowers]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Insert @ 3133...

{
float[] __param2 = new float[1];
__param2[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnApplyPowers.damageFinalInsert($0, __param2);
tmp = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.FixUniqueKeywordsMultiTooltips]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.initializeTips()]
 - Adding Insert @ 1411...

{
boolean[] __param4 = new boolean[1];
__param4[0] = alreadyExists;
basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.FixUniqueKeywordsMultiTooltips.Insert($0, s, t, __param4);
alreadyExists = __param4[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DamageHooks$CalculateCardDamageMulti]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.calculateCardDamage(com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Adding Insert @ 3304...

{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.DamageHooks$CalculateCardDamageMulti.Insert($0, $1, tmp, i);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.EverythingFix$DidChangeTab]
 - Patching [com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.didChangeTab(com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar,com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar$CurrentTab)]
 - Adding Insert @ r1 (abs:525)...

{
com.megacrit.cardcrawl.cards.CardGroup[] __param4 = new com.megacrit.cardcrawl.cards.CardGroup[1];
__param4[0] = visibleCards;
basemod.patches.com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.EverythingFix$DidChangeTab.Insert($0, $1, $2, __param4);
visibleCards = __param4[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.charSelect.CharacterOption.MultiwordKeywords]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterOption.renderRelics(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 459...

{
java.lang.String[] __param3 = new java.lang.String[1];
__param3[0] = relicString;
basemod.patches.com.megacrit.cardcrawl.screens.charSelect.CharacterOption.MultiwordKeywords.Insert($0, $1, __param3);
relicString = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.ModifyXCostPatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.useCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.monsters.AbstractMonster,int)]
 - Adding Insert @ 1681...

{
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.ModifyXCostPatch.Insert($0, $1, $2, $3);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.ObtainRelicGetHook]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.obtain()]
 - Adding Insert @ 298...

{
basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.ObtainRelicGetHook.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AddEvents$NormalAndShrineEvents]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon(java.lang.String,java.lang.String,com.megacrit.cardcrawl.characters.AbstractPlayer,java.util.ArrayList)]
 - Adding Insert @ 362...

{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AddEvents$NormalAndShrineEvents.insert($0, $1, $2, $3, $4);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.options.SettingsScreen.PopupSwitch]
 - Patching [com.megacrit.cardcrawl.screens.options.SettingsScreen.popup(com.megacrit.cardcrawl.screens.options.ConfirmPopup$ConfirmType)]
 - Adding Insert @ r35 (abs:102)...

{
basemod.patches.com.megacrit.cardcrawl.screens.options.SettingsScreen.PopupSwitch.Insert($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.EditCharactersHook]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.create()]
 - Adding Insert @ 293...

{
basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.EditCharactersHook.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.FixDescriptionWidthCustomDynamicVariable]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescription()]
 - Adding Insert @ 568...

{
com.badlogic.gdx.graphics.g2d.GlyphLayout[] __param2 = new com.badlogic.gdx.graphics.g2d.GlyphLayout[1];
__param2[0] = gl;
java.lang.String[] __param3 = new java.lang.String[1];
__param3[0] = word;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.FixDescriptionWidthCustomDynamicVariable.Insert($0, __param2, __param3);
gl = __param2[0];
word = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.InstantObtainRelicGetHook2]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.instantObtain()]
 - Adding Insert @ 270...

{
basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.InstantObtainRelicGetHook2.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.OnPlayerDamagedHook]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Insert @ 1724...

{
int[] __param3 = new int[1];
__param3[0] = damageAmount;
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.OnPlayerDamagedHook.InsertPre($0, $1, __param3);
damageAmount = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.CustomActionHooks$updatePatch]
 - Patching [com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.update()]
 - Adding Insert @ 164...

{
basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.CustomActionHooks$updatePatch.Insert($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen.SwapCharacterSelectScreen]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen(boolean)]
 - Adding Insert @ 134...

{
basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen.SwapCharacterSelectScreen.Insert($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.CustomRewardSave]
 - Patching [com.megacrit.cardcrawl.saveAndContinue.SaveFile(com.megacrit.cardcrawl.saveAndContinue.SaveFile$SaveType)]
 - Adding Insert @ 373...

{
basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.CustomRewardSave.Insert($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterEnergyKeyword]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescriptionCN()]
 - Adding Insert @ 612...

{
java.lang.String[] __param2 = new java.lang.String[1];
__param2[0] = word;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterEnergyKeyword.Insert($0, __param2);
word = __param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShiftSizeLineDescription]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderDescription(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2049...

{
float[] __param3 = new float[1];
__param3[0] = draw_y;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShiftSizeLineDescription.Insert($0, $1, __param3);
draw_y = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.NoUnlockBar]
 - Patching [com.megacrit.cardcrawl.screens.DeathScreen.calculateUnlockProgress()]
 - Adding Insert @ 551...

{
boolean[] __param3 = new boolean[1];
__param3[0] = maxLevel;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.screens.NoUnlockBar.unlockLimitCheck($0, unlockLevel, __param3);
maxLevel = __param3[0];
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$RenderSmallEnergyOrb]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderDescription(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2239...

{
float[] __param5 = new float[1];
__param5[0] = start_x;
java.lang.String[] __param9 = new java.lang.String[1];
__param9[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$RenderSmallEnergyOrb.Insert($0, $1, spacing, i, __param5, draw_y, font, textColor, __param9, gl);
start_x = __param5[0];
tmp = __param9[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$RenderSmallEnergyOrb]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderDescriptionCN(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2443...

{
float[] __param5 = new float[1];
__param5[0] = start_x;
java.lang.String[] __param9 = new java.lang.String[1];
__param9[0] = tmp;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$RenderSmallEnergyOrb.Insert($0, $1, spacing, i, __param5, draw_y, font, textColor, __param9, gl);
start_x = __param5[0];
tmp = __param9[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.NoUnlockBar]
 - Patching [com.megacrit.cardcrawl.screens.VictoryScreen.calculateUnlockProgress()]
 - Adding Insert @ 510...

{
boolean[] __param3 = new boolean[1];
__param3[0] = maxLevel;
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.screens.NoUnlockBar.unlockLimitCheck($0, unlockLevel, __param3);
maxLevel = __param3[0];
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShiftSizeLineDescription]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderDescriptionCN(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Insert @ 2319...

{
float[] __param3 = new float[1];
__param3[0] = draw_y;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShiftSizeLineDescription.Insert($0, $1, __param3);
draw_y = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterEnergyKeyword]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescription()]
 - Adding Insert @ 496...

{
java.lang.String[] __param2 = new java.lang.String[1];
__param2[0] = word;
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterEnergyKeyword.Insert($0, __param2);
word = __param2[0];
}

Patch Class: [kobting.friendlyminions.patches.MonsterIntentPatch$CreateIntentPatch]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.createIntent()]
 - Adding Insert @ 506...

{
kobting.friendlyminions.patches.MonsterIntentPatch$CreateIntentPatch.Insert($0);
}

Patch Class: [kobting.souleater.patches.SaveAndContinuePatches$LoadSaveFilePatch]
 - Patching [com.megacrit.cardcrawl.saveAndContinue.SaveAndContinue.loadSaveFile(java.lang.String)]
 - Adding Insert @ 108...

{
com.megacrit.cardcrawl.saveAndContinue.SaveFile[] __param2 = new com.megacrit.cardcrawl.saveAndContinue.SaveFile[1];
__param2[0] = saveFile;
kobting.souleater.patches.SaveAndContinuePatches$LoadSaveFilePatch.changeGsonConversion($1, __param2, gson, savestr);
saveFile = __param2[0];
}

Patch Class: [kobting.souleater.patches.CardGroupPatches$GetCardDeckPatch]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.getCardDeck()]
 - Adding Insert @ 73...

{
kobting.souleater.patches.CardGroupPatches$GetCardDeckPatch.patchInSoulSaving($0, retVal, card);
}

Patch Class: [kobting.souleater.patches.CardCrawlGamePatches$LoadPlayerSavePatch]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.loadPlayerSave(com.megacrit.cardcrawl.characters.AbstractPlayer)]
 - Adding Insert @ 1123...

{
kobting.souleater.patches.CardCrawlGamePatches$LoadPlayerSavePatch.loadSoulCardSaves($0, $1, s);
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.modsscreen.SaveBaseModBadges]
 - Patching [basemod.BaseMod.registerModBadge(com.badlogic.gdx.graphics.Texture,java.lang.String,java.lang.String,java.lang.String,basemod.ModPanel)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.TopPanelModList$Render]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.MainMenuModList]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.AlwaysEnableCustomMode]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MenuPanelScreen.initializePanels()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.PositionCharacterButtons]
 - Patching [com.megacrit.cardcrawl.screens.custom.CustomModeScreen.updateCharacterButtons()]
 - Adding Instrument...

Patch Class: [basemod.patches.whatmod.LinkedRelics]
 - Patching [com.megacrit.cardcrawl.rewards.RewardItem.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.whatmod.PlayerPowerTips$Nested]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.renderPowerTips(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.buttons.CancelButton.ModSettingsCheck]
 - Patching [com.megacrit.cardcrawl.ui.buttons.CancelButton.update()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.actions.GameActionManager.PreMonsterTurnHook]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.getNextAction()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleRelicViewPopup.MultiwordKeywords]
 - Patching [com.megacrit.cardcrawl.screens.SingleRelicViewPopup.renderDescription(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.IntangiblePower.FixPlayerIntangiblePower]
 - Patching [com.megacrit.cardcrawl.powers.IntangiblePower.atEndOfTurn(boolean)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.FontHelper.AllowSmartTextsToRemoveSpaces$GetSmartHeightPatch]
 - Patching [com.megacrit.cardcrawl.helpers.FontHelper.getSmartHeight(com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.String,float,float)]
 - Adding Instrument...

Patch Class: [basemod.patches.whatmod.FixCardPreviewPlacement]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderCardPreviewInSingleView(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$RenderScrollingPowerTips]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderPowerTips(float,float,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.util.ArrayList)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.AlternateCardCosts$CardModifierSpendResources]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.useCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.monsters.AbstractMonster,int)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.GetAllInBattleInstances.FixNPE]
 - Patching [com.megacrit.cardcrawl.helpers.GetAllInBattleInstances.get(java.util.UUID)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.charSelect.CharacterOption.UpdateHitboxBgImg]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterOption.updateHitbox()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.BackgroundFix$EnergyOrbTexture]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderCost(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.map.MapGenerator.PathDensityMultiplier]
 - Patching [com.megacrit.cardcrawl.map.MapGenerator.generateDungeon(int,int,int,com.megacrit.cardcrawl.random.Random)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.FixLogging$FixDescriptionCNLog]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescriptionCN()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.FixLogging$FixDescriptionLog]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescription()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$ChangeMethodCall]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderTips(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.CombatRewardScreen.RewardsScrolling$ScrollUpdate]
 - Patching [com.megacrit.cardcrawl.screens.CombatRewardScreen.rewardViewUpdate()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.input.InputAction.ConsoleDisable$IsPressedFix]
 - Patching [com.megacrit.cardcrawl.helpers.input.InputAction.isPressed()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.FixLogging$FixUpdateLog]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.update()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch$RefreshHandLayout]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.refreshHandLayout()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.FixLogging$FixRenderLog]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.input.InputAction.ConsoleDisable$IsJustPressedFix]
 - Patching [com.megacrit.cardcrawl.helpers.input.InputAction.isJustPressed()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.RelicLibrary.GetRelicFix]
 - Patching [com.megacrit.cardcrawl.helpers.RelicLibrary.getRelic(java.lang.String)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.campfire.AbstractCampfireOption.PostCampfireHook]
 - Patching [com.megacrit.cardcrawl.ui.campfire.AbstractCampfireOption.update()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.CustomBosses$AddBosses]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon(java.lang.String,java.lang.String,com.megacrit.cardcrawl.characters.AbstractPlayer,java.util.ArrayList)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.FontHelper.AllowSmartTextsToRemoveSpaces$RenderSmartTextPatch]
 - Patching [com.megacrit.cardcrawl.helpers.FontHelper.renderSmartText(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.graphics.g2d.BitmapFont,java.lang.String,float,float,float,float,com.badlogic.gdx.graphics.Color)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.FixLargeImageRender$Render]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.render(com.badlogic.gdx.graphics.g2d.SpriteBatch,boolean,com.badlogic.gdx.graphics.Color)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderFixSwitches$RenderEnergySwitch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderEnergy(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.whatmod.MonsterPowerTips$Nested]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.renderTip(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.TipWithWrappingHeaderPatch$PushDownTipBoxBody]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderTipBox(float,float,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.String,java.lang.String)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.TipWithWrappingHeaderPatch$PushDownPowerBoxBody]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderBox(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.String,float,float)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnCreateDescription]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescriptionCN()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.RenderDescriptionEnergy]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderDescription(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.OnEvokeOrb]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.evokeNewestOrb()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.OnEvokeOrb]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.evokeOrb()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.RenderDescriptionEnergy]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderDescriptionCN(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.OnEvokeOrb]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.evokeWithoutLosingOrb()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnCreateDescription]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescription()]
 - Adding Instrument...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.events.NoteForYourself.MissingCard]
 - Patching [com.megacrit.cardcrawl.events.shrines.NoteForYourself.initializeObtainCard()]
 - Replacing...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.MultiwordKeywords$BetterCapitalize]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.capitalize(java.lang.String)]
 - Replacing...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderFixSwitches$RenderBannerSwitch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderBannerImage(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderFixSwitches$RenderBannerSwitch.Prefix($0, $1, $2, $3, renderColor);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$RenderDailyModsPatch]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.renderDailyMods(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$RenderDailyModsPatch.Prefix($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.HasRelicModID]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.hasRelic(java.lang.String)]
 - Adding Prefix...
{
java.lang.String[] __param2 = new java.lang.String[1];
__param2[0] = $1;
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.HasRelicModID.Prefix($0, __param2);
$1 = (java.lang.String)__param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.GetCardModID$GetCardPatch1]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.getCard(java.lang.String)]
 - Adding Prefix...
{
java.lang.String[] __param1 = new java.lang.String[1];
__param1[0] = $1;
basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.GetCardModID$GetCardPatch1.Prefix(__param1);
$1 = (java.lang.String)__param1[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.RelicOutlineColor$Locked]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.renderLock(com.badlogic.gdx.graphics.g2d.SpriteBatch,com.badlogic.gdx.graphics.Color)]
 - Adding Prefix...
{
com.badlogic.gdx.graphics.Color[] __param3 = new com.badlogic.gdx.graphics.Color[1];
__param3[0] = $2;
basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.RelicOutlineColor$Locked.Prefix($0, $1, __param3);
$2 = (com.badlogic.gdx.graphics.Color)__param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.CombatRewardScreen.RewardsScrolling$PositionRewards]
 - Patching [com.megacrit.cardcrawl.screens.CombatRewardScreen.positionRewards()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.screens.CombatRewardScreen.RewardsScrolling$PositionRewards.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.EditCardsPatch]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.initialize()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.EditCardsPatch.Prefix();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.actions.GameActionManager.ModalChoiceFix]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.getNextAction()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.actions.GameActionManager.ModalChoiceFix.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierRemoveEndOfTurnModifiers]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.resetAttributes()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierRemoveEndOfTurnModifiers.Prefix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.TipWithWrappingHeaderPatch$PushDownTipBoxBody]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderTipBox(float,float,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.String,java.lang.String)]
 - Adding Prefix...
{
float[] __param6 = new float[1];
__param6[0] = textHeight;
basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.TipWithWrappingHeaderPatch$PushDownTipBoxBody.Prefix($1, $2, $3, $4, $5, __param6);
textHeight = __param6[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderFixSwitches$RenderPortraitFrameSwitch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderPortraitFrame(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderFixSwitches$RenderPortraitFrameSwitch.Prefix($0, $1, $2, $3, renderColor);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.CustomBosses$SetBossIcon]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.setBoss(java.lang.String)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.CustomBosses$SetBossIcon.Prefix($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.DeathScreen.PostDeathHook$StopMultiVictory]
 - Patching [com.megacrit.cardcrawl.cutscenes.Cutscene.openVictoryScreen()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.screens.DeathScreen.PostDeathHook$StopMultiVictory.Prefix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.CustomRendering$RenderBannerSwitch]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderCardBanner(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.CustomRendering$RenderBannerSwitch.Prefix($0, $1, card, drawScale);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ConstructSaveFilePatch]
 - Patching [com.megacrit.cardcrawl.saveAndContinue.SaveFile(com.megacrit.cardcrawl.saveAndContinue.SaveFile$SaveType)]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ConstructSaveFilePatch.Prefix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.OpenFix$Open]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.open(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.cards.CardGroup)]
 - Adding Prefix...
{
com.megacrit.cardcrawl.cards.CardGroup[] __param3 = new com.megacrit.cardcrawl.cards.CardGroup[1];
__param3[0] = $2;
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.OpenFix$Open.Prefix($0, $1, __param3);
$2 = (com.megacrit.cardcrawl.cards.CardGroup)__param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.GiveOrbSlotOnChannel]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.channelOrb(com.megacrit.cardcrawl.orbs.AbstractOrb)]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.GiveOrbSlotOnChannel.Prefix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.TipWithWrappingHeaderPatch$PushDownPowerBoxBody]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderBox(com.badlogic.gdx.graphics.g2d.SpriteBatch,java.lang.String,float,float)]
 - Adding Prefix...
{
float[] __param5 = new float[1];
__param5[0] = textHeight;
basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.TipWithWrappingHeaderPatch$PushDownPowerBoxBody.Prefix($1, $2, $3, $4, __param5);
textHeight = __param5[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.DungeonUpdateHooks]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.update()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.DungeonUpdateHooks.Prefix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.rooms.AbstractRoom.PreRenderHook]
 - Patching [com.megacrit.cardcrawl.rooms.AbstractRoom.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.rooms.AbstractRoom.PreRenderHook.preRoomRenderHook($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.GetCardModID$GetCardPatch2]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.getCard(com.megacrit.cardcrawl.characters.AbstractPlayer$PlayerClass,java.lang.String)]
 - Adding Prefix...
{
java.lang.String[] __param2 = new java.lang.String[1];
__param2[0] = $2;
basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.GetCardModID$GetCardPatch2.Prefix($1, __param2);
$2 = (java.lang.String)__param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$RenderPatch]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$RenderPatch.Prefix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.RelicLibrary.GetRelicFix]
 - Patching [com.megacrit.cardcrawl.helpers.RelicLibrary.getRelic(java.lang.String)]
 - Adding Prefix...
{
java.lang.String[] __param1 = new java.lang.String[1];
__param1[0] = $1;
basemod.patches.com.megacrit.cardcrawl.helpers.RelicLibrary.GetRelicFix.Prefix(__param1);
$1 = (java.lang.String)__param1[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.charSelect.CharacterOption.HideLongRelicDescriptions]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterOption.renderInfo(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.screens.charSelect.CharacterOption.HideLongRelicDescriptions.Prefix($0, $1, infoX);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.RelicLibrary.EditRelicsPatch]
 - Patching [com.megacrit.cardcrawl.helpers.RelicLibrary.initialize()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.RelicLibrary.EditRelicsPatch.Prefix();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.PreStartGameHook]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.createCharacter(com.megacrit.cardcrawl.characters.AbstractPlayer$PlayerClass)]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.PreStartGameHook.Prefix($1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.localization.LocalizedStrings.GetCardStringsModID]
 - Patching [com.megacrit.cardcrawl.localization.LocalizedStrings.getCardStrings(java.lang.String)]
 - Adding Prefix...
{
java.lang.String[] __param2 = new java.lang.String[1];
__param2[0] = $1;
basemod.patches.com.megacrit.cardcrawl.localization.LocalizedStrings.GetCardStringsModID.Prefix($0, __param2);
$1 = (java.lang.String)__param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.AbstractCreature.ModifyPlayerLoseBlock]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.loseBlock(int,boolean)]
 - Adding Prefix...
{
int[] __param2 = new int[1];
__param2[0] = $1;
basemod.patches.com.megacrit.cardcrawl.core.AbstractCreature.ModifyPlayerLoseBlock.Prefix($0, __param2, $2);
$1 = (int)__param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderFixSwitches$RenderBgSwitch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderCardBg(com.badlogic.gdx.graphics.g2d.SpriteBatch,float,float)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderFixSwitches$RenderBgSwitch.Prefix($0, $1, $2, $3, renderColor);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.FakeKeywords]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderKeywords(float,float,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.util.ArrayList)]
 - Adding Prefix...
{
float[] __param2 = new float[1];
__param2[0] = $2;
basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.FakeKeywords.Prefix($1, __param2, $3, $4, card);
$2 = (float)__param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.CustomActionHooks$resetFlagsOnOpen]
 - Patching [com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.callOnOpen()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.CustomActionHooks$resetFlagsOnOpen.Prefix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PlayerUpdateHooks]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.update()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PlayerUpdateHooks.Prefix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.CustomRendering$RenderCustomFrame]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderFrame(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.CustomRendering$RenderCustomFrame.Prefix($0, $1, card, drawScale);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$RenderScrollingPowerTips]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderPowerTips(float,float,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.util.ArrayList)]
 - Adding Prefix...
{
float[] __param2 = new float[1];
__param2[0] = $2;
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$RenderScrollingPowerTips.Prefix($1, __param2, $3, $4);
$2 = (float)__param2[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.EventHelper.GetCustomEvents]
 - Patching [com.megacrit.cardcrawl.helpers.EventHelper.getEvent(java.lang.String)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.helpers.EventHelper.GetCustomEvents.prefix($1);
if (opt.isPresent()) { return (com.megacrit.cardcrawl.events.AbstractEvent)opt.get(); }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.UseCardModalComplete]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.useCard(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.monsters.AbstractMonster,int)]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.UseCardModalComplete.Prefix($0, $1, $2, $3);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.unlock.UnlockTracker.UnlockCardModID]
 - Patching [com.megacrit.cardcrawl.unlock.UnlockTracker.unlockCard(java.lang.String)]
 - Adding Prefix...
{
java.lang.String[] __param1 = new java.lang.String[1];
__param1[0] = $1;
basemod.patches.com.megacrit.cardcrawl.unlock.UnlockTracker.UnlockCardModID.Prefix(__param1);
$1 = (java.lang.String)__param1[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$RenderAscension]
 - Patching [com.megacrit.cardcrawl.screens.custom.CustomModeScreen.renderAscension(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$RenderAscension.Prefix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.CombatRewardScreen.RewardsScrolling$ResetScrollPosition]
 - Patching [com.megacrit.cardcrawl.screens.CombatRewardScreen.setupItemReward()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.screens.CombatRewardScreen.RewardsScrolling$ResetScrollPosition.Prefix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.RenderHooks$PreRenderHook]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.render()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.RenderHooks$PreRenderHook.Prefix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$UpdatePatch]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.update()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$UpdatePatch.Prefix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierCanPlayCard]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.hasEnoughEnergy()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierCanPlayCard.Prefix($0);
if (opt.isPresent()) { return ( (Boolean)opt.get()).booleanValue(); }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.RelicOutlineColor$Normal]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.render(com.badlogic.gdx.graphics.g2d.SpriteBatch,boolean,com.badlogic.gdx.graphics.Color)]
 - Adding Prefix...
{
com.badlogic.gdx.graphics.Color[] __param4 = new com.badlogic.gdx.graphics.Color[1];
__param4[0] = $3;
basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.RelicOutlineColor$Normal.Prefix($0, $1, $2, __param4);
$3 = (com.badlogic.gdx.graphics.Color)__param4[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.monsters.MonsterInfo.AddCustomMonsters]
 - Patching [com.megacrit.cardcrawl.monsters.MonsterInfo.normalizeWeights(java.util.ArrayList)]
 - Adding Prefix...
{
java.util.ArrayList[] __param1 = new java.util.ArrayList[1];
__param1[0] = $1;
basemod.patches.com.megacrit.cardcrawl.monsters.MonsterInfo.AddCustomMonsters.Prefix(__param1);
$1 = (java.util.ArrayList)__param1[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.BackgroundFix$BackgroundTexture]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderCardBack(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.BackgroundFix$BackgroundTexture.Prefix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CreateCardImageSwitch$CreateCardImage]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.createCardImage()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CreateCardImageSwitch$CreateCardImage.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShrinkInitializeDescription]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescriptionCN()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShrinkInitializeDescription.Prefix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShrinkInitializeDescription]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescription()]
 - Adding Prefix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShrinkInitializeDescription.Prefix($0);
}

Patch Class: [kobting.friendlyminions.patches.MonsterIntentPatch$CreateIntentPatch]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.createIntent()]
 - Adding Prefix...
{
kobting.friendlyminions.patches.MonsterIntentPatch$CreateIntentPatch.Prefix($0);
}

Patch Class: [kobting.friendlyminions.patches.PlayerMethodPatches$RenderPatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Prefix...
{
kobting.friendlyminions.patches.PlayerMethodPatches$RenderPatch.Prefix($0, $1);
}

Patch Class: [kobting.friendlyminions.patches.MonsterIntentPatch$ApplyPowersPatch]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.applyPowers()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = kobting.friendlyminions.patches.MonsterIntentPatch$ApplyPowersPatch.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [kobting.friendlyminions.patches.MonsterIntentPatch$UpdateIntentTipPatch]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.updateIntentTip()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = kobting.friendlyminions.patches.MonsterIntentPatch$UpdateIntentTipPatch.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [kobting.friendlyminions.patches.MonsterIntentPatch$CalculateDamagePatch]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.calculateDamage(int)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = kobting.friendlyminions.patches.MonsterIntentPatch$CalculateDamagePatch.Prefix($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [kobting.friendlyminions.patches.MonsterIntentPatch$GetIntentImagePatch]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.getIntentImg()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = kobting.friendlyminions.patches.MonsterIntentPatch$GetIntentImagePatch.Prefix($0);
if (opt.isPresent()) { return (com.badlogic.gdx.graphics.Texture)opt.get(); }
}

Patch Class: [kobting.friendlyminions.patches.MonsterIntentPatch$UpdateIntentVFXPatch]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.updateIntentVFX()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = kobting.friendlyminions.patches.MonsterIntentPatch$UpdateIntentVFXPatch.Prefix($0);
if (opt.isPresent()) { return; }
}

Patch Class: [kobting.friendlyminions.patches.PlayerMethodPatches$DamagePatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.damage(com.megacrit.cardcrawl.cards.DamageInfo)]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = kobting.friendlyminions.patches.PlayerMethodPatches$DamagePatch.Prefix($0, $1);
if (opt.isPresent()) { return; }
}

Patch Class: [kobting.friendlyminions.patches.PlayerMethodPatches$InitializePatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.initializeClass(java.lang.String,java.lang.String,java.lang.String,java.lang.String,com.megacrit.cardcrawl.screens.CharSelectInfo,float,float,float,float,com.megacrit.cardcrawl.core.EnergyManager)]
 - Adding Prefix...
{
kobting.friendlyminions.patches.PlayerMethodPatches$InitializePatch.Prefix($0);
}

Patch Class: [kobting.friendlyminions.patches.CardPatch]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.hasEnoughEnergy()]
 - Adding Prefix...
{
com.evacipated.cardcrawl.modthespire.lib.SpireReturn opt = kobting.friendlyminions.patches.CardPatch.Prefix($0);
if (opt.isPresent()) { return ( (Boolean)opt.get()).booleanValue(); }
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.modsscreen.ModsScreenUpdateRender$Update]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen.update()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.modthespire.patches.modsscreen.ModsScreenUpdateRender$Update.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.modsscreen.ModMenuButton$ButtonEffect]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MenuButton.buttonEffect()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.modthespire.patches.modsscreen.ModMenuButton$ButtonEffect.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.TopPanelModList]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.updateTips()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.modthespire.patches.TopPanelModList.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.modsscreen.ModsScreenUpdateRender$Render]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.modthespire.patches.modsscreen.ModsScreenUpdateRender$Render.Postfix($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.modsscreen.ModMenuButton$SetLabel]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.MenuButton.setLabel()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.modthespire.patches.modsscreen.ModMenuButton$SetLabel.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.modsscreen.BaseMod.DisableBaseModBadges]
 - Patching [basemod.BaseMod.publishPostInitialize()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.modthespire.patches.modsscreen.BaseMod.DisableBaseModBadges.Postfix();
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.TopPanelModList$Render]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
com.evacipated.cardcrawl.modthespire.patches.TopPanelModList$Render.Postfix($0, $1);
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.CreditsModList]
 - Patching [com.megacrit.cardcrawl.credits.CreditsScreen()]
 - Adding Postfix...
{
com.evacipated.cardcrawl.modthespire.patches.CreditsModList.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.AddCustomModeModsHook]
 - Patching [com.megacrit.cardcrawl.screens.custom.CustomModeScreen.initializeMods()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.AddCustomModeModsHook.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.GreenCardsPatch]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.addGreenCards()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.GreenCardsPatch.Postfix();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.DungeonUpdateHooks]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.update()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.DungeonUpdateHooks.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.GameDictionary.PostKeywordInitialize]
 - Patching [com.megacrit.cardcrawl.helpers.GameDictionary.initialize()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.GameDictionary.PostKeywordInitialize.Postfix();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.RedCardsPatch]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.addRedCards()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.RedCardsPatch.Postfix();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.LoadPlayerSaves]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.loadPlayerSave(com.megacrit.cardcrawl.characters.AbstractPlayer)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.LoadPlayerSaves.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.stats.StatsScreen.UpdateStats$ScrollBounds]
 - Patching [com.megacrit.cardcrawl.screens.stats.StatsScreen.calculateScrollBounds()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.stats.StatsScreen.UpdateStats$ScrollBounds.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.MultiwordKeywords]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.initializeTips()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.relics.AbstractRelic.MultiwordKeywords.Postfix($0);
}

Patch Class: [basemod.patches.whatmod.Events]
 - Patching [com.megacrit.cardcrawl.events.AbstractEvent.renderText(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
basemod.patches.whatmod.Events.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$RenderPatch]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$RenderPatch.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.CombatRewardScreen.RewardsScrolling$RenderScissor]
 - Patching [com.megacrit.cardcrawl.screens.CombatRewardScreen.renderItemReward(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.CombatRewardScreen.RewardsScrolling$RenderScissor.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.runHistory.TinyCard.ColorPatch$DescriptionColor]
 - Patching [com.megacrit.cardcrawl.screens.runHistory.TinyCard.getIconDescriptionColor(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Postfix...
      Return: com.badlogic.gdx.graphics.Color
      Result param: com.badlogic.gdx.graphics.Color
{
return ($r)basemod.patches.com.megacrit.cardcrawl.screens.runHistory.TinyCard.ColorPatch$DescriptionColor.Postfix($_, $0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.BlueCardsPatch]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.addBlueCards()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.BlueCardsPatch.Postfix();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.unlock.UnlockTracker.PostRefresh]
 - Patching [com.megacrit.cardcrawl.unlock.UnlockTracker.refresh()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.unlock.UnlockTracker.PostRefresh.Postfix();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.MyTrueFormPatch$SeededRun]
 - Patching [com.megacrit.cardcrawl.trials.MyTrueFormTrial.dailyModIDs()]
 - Adding Postfix...
      Return: java.util.ArrayList
      Result param: java.util.ArrayList
{
return ($r)basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.MyTrueFormPatch$SeededRun.Postfix($_, $0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen.FixCharacterFilter$RefreshData]
 - Patching [com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen.refreshData()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen.FixCharacterFilter$RefreshData.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierUpdate]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.update()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierUpdate.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.potions.Color.AbstractPotionInitializeColor]
 - Patching [com.megacrit.cardcrawl.potions.AbstractPotion.initializeColor()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.potions.Color.AbstractPotionInitializeColor.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$RenderAscension]
 - Patching [com.megacrit.cardcrawl.screens.custom.CustomModeScreen.renderAscension(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$RenderAscension.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cutscenes.Cutscene.CustomCutscenes]
 - Patching [com.megacrit.cardcrawl.cutscenes.Cutscene(com.megacrit.cardcrawl.characters.AbstractPlayer$PlayerClass)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cutscenes.Cutscene.CustomCutscenes.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.PostDungeonInitializeHook]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.initializeRelicList()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.PostDungeonInitializeHook.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.options.OptionsPanel.RefreshSwitch]
 - Patching [com.megacrit.cardcrawl.screens.options.OptionsPanel.refresh()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.options.OptionsPanel.RefreshSwitch.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cutscenes.Cutscene.CustomVictoryEffects]
 - Patching [com.megacrit.cardcrawl.screens.VictoryScreen.updateVfx()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cutscenes.Cutscene.CustomVictoryEffects.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShrinkFontSize]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.getDescFont()]
 - Adding Postfix...
      Return: com.badlogic.gdx.graphics.g2d.BitmapFont
      Result param: com.badlogic.gdx.graphics.g2d.BitmapFont
{
return ($r)basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShrinkFontSize.Postfix($_, $0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierRender]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierRender.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.compendium.RelicViewScreen.ScrollBoundsFix]
 - Patching [com.megacrit.cardcrawl.screens.compendium.RelicViewScreen.render(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.compendium.RelicViewScreen.ScrollBoundsFix.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.ModalChoiceScreenUpdateRender$OpenPreviousScreen]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.openPreviousScreen(com.megacrit.cardcrawl.dungeons.AbstractDungeon$CurrentScreen)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.ModalChoiceScreenUpdateRender$OpenPreviousScreen.Postfix($1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.CustomActionHooks$reopenPatch]
 - Patching [com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.reopen()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.CustomActionHooks$reopenPatch.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.PotionLibrary.PotionHelperGetPotion]
 - Patching [com.megacrit.cardcrawl.helpers.PotionHelper.getPotion(java.lang.String)]
 - Adding Postfix...
      Return: java.lang.Object
      Result param: java.lang.Object
{
return ($r)basemod.patches.com.megacrit.cardcrawl.helpers.PotionLibrary.PotionHelperGetPotion.Postfix($_, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.ColorTabBarFix$Update]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.update(float)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.ColorTabBarFix$Update.Postfix($0, $1);
}

Patch Class: [basemod.patches.whatmod.CardView]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderTips(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
basemod.patches.whatmod.CardView.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.charSelect.CharacterOption.CorrectRemainingUnlocks$StringConstructor]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterOption(java.lang.String,com.megacrit.cardcrawl.characters.AbstractPlayer,java.lang.String,java.lang.String)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.charSelect.CharacterOption.CorrectRemainingUnlocks$StringConstructor.correctAmount($0, $1, $2, $3, $4);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.actions.GameActionManager.ModalChoiceFix]
 - Patching [com.megacrit.cardcrawl.actions.GameActionManager.getNextAction()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.actions.GameActionManager.ModalChoiceFix.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.GetCardListSwitch]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.getCardList(com.megacrit.cardcrawl.helpers.CardLibrary$LibraryType)]
 - Adding Postfix...
      Return: java.util.ArrayList
      Result param: java.util.ArrayList
{
return ($r)basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.GetCardListSwitch.Postfix($_, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.MyTrueFormPatch$CustomMode]
 - Patching [com.megacrit.cardcrawl.screens.custom.CustomModeScreen.addNonDailyMods(com.megacrit.cardcrawl.trials.CustomTrial,java.util.ArrayList)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.MyTrueFormPatch$CustomMode.Postfix($0, $1, $2);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.FakeKeywords]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderKeywords(float,float,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.util.ArrayList)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.TipHelper.FakeKeywords.Postfix($1, $2, $3, $4);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.shop.ShopScreen.PostCreateShopPotionHook]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.initPotions()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.shop.ShopScreen.PostCreateShopPotionHook.Postfix($0);
}

Patch Class: [basemod.patches.whatmod.RelicTips]
 - Patching [com.megacrit.cardcrawl.relics.AbstractRelic.initializeTips()]
 - Adding Postfix...
{
basemod.patches.whatmod.RelicTips.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.runHistory.TinyCard.ColorPatch$BackgroundColor]
 - Patching [com.megacrit.cardcrawl.screens.runHistory.TinyCard.getIconBackgroundColor(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Adding Postfix...
      Return: com.badlogic.gdx.graphics.Color
      Result param: com.badlogic.gdx.graphics.Color
{
return ($r)basemod.patches.com.megacrit.cardcrawl.screens.runHistory.TinyCard.ColorPatch$BackgroundColor.Postfix($_, $0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleRelicViewPopup.FixLargeRelicArt]
 - Patching [com.megacrit.cardcrawl.screens.SingleRelicViewPopup.initializeLargeImg()]
 - Adding Postfix...
{
com.badlogic.gdx.graphics.Texture[] __param3 = new com.badlogic.gdx.graphics.Texture[1];
__param3[0] = largeImg;
basemod.patches.com.megacrit.cardcrawl.screens.SingleRelicViewPopup.FixLargeRelicArt.Postfix($0, relic, __param3);
largeImg = __param3[0];
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.PurpleCardsPatch]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.addPurpleCards()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.PurpleCardsPatch.Postfix();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.CardGroup.WithoutBottledCardsPatch]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.getGroupWithoutBottledCards(com.megacrit.cardcrawl.cards.CardGroup)]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.CardGroup
      Result param: com.megacrit.cardcrawl.cards.CardGroup
{
return ($r)basemod.patches.com.megacrit.cardcrawl.cards.CardGroup.WithoutBottledCardsPatch.Postfix($_, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderRelicOnCard]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderCard(com.badlogic.gdx.graphics.g2d.SpriteBatch,boolean,boolean)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderRelicOnCard.Postfix($0, $1, $2, $3);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PotionGetHooks$One]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.obtainPotion(int,com.megacrit.cardcrawl.potions.AbstractPotion)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PotionGetHooks$One.Postfix($0, $1, $2);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AddEvents$OneTimeEvents]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.initializeSpecialOneTimeEventList()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.AddEvents$OneTimeEvents.postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.ColorlessCardsPatch]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.addColorlessCards()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.ColorlessCardsPatch.Postfix();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.DeathScreen.ForceUnlock]
 - Patching [com.megacrit.cardcrawl.screens.DeathScreen.calculateUnlockProgress()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.DeathScreen.ForceUnlock.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.MonsterHelper.GetEncounter]
 - Patching [com.megacrit.cardcrawl.helpers.MonsterHelper.getEncounter(java.lang.String)]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.monsters.MonsterGroup
      Result param: com.megacrit.cardcrawl.monsters.MonsterGroup
{
return ($r)basemod.patches.com.megacrit.cardcrawl.helpers.MonsterHelper.GetEncounter.Postfix($_, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen.FixCharacterFilter$CharacterText]
 - Patching [com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen.characterText(java.lang.String)]
 - Adding Postfix...
      Return: java.lang.String
      Result param: java.lang.String
{
return ($r)basemod.patches.com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen.FixCharacterFilter$CharacterText.Postfix($_, $0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.EverythingFix$setLockStatus]
 - Patching [com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.setLockStatus()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.EverythingFix$setLockStatus.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$SetPlayerNamePatch]
 - Patching [com.megacrit.cardcrawl.ui.panels.TopPanel.setPlayerName()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.ui.panels.TopPanel.TopPanelPatches$SetPlayerNamePatch.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.rooms.CampfireUI.GiryaFix]
 - Patching [com.megacrit.cardcrawl.rooms.CampfireUI.initializeButtons()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.rooms.CampfireUI.GiryaFix.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$RenderScrollingPowerTips]
 - Patching [com.megacrit.cardcrawl.helpers.TipHelper.renderPowerTips(float,float,com.badlogic.gdx.graphics.g2d.SpriteBatch,java.util.ArrayList)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$RenderScrollingPowerTips.Postfix($1, $2, $3, $4);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$RenderHeaders]
 - Patching [com.megacrit.cardcrawl.screens.custom.CustomModeScreen.renderScreen(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.custom.CustomModeScreen.FixEverythingPosition$RenderHeaders.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.ColorTabBarFix$Ctor]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar(com.megacrit.cardcrawl.screens.mainMenu.TabBarListener)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.ColorTabBarFix$Ctor.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.SmithPreview]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.displayUpgrades()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.SmithPreview.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.unlock.UnlockTracker.GetUnlockBundleSwitch]
 - Patching [com.megacrit.cardcrawl.unlock.UnlockTracker.getUnlockBundle(com.megacrit.cardcrawl.characters.AbstractPlayer$PlayerClass,int)]
 - Adding Postfix...
      Return: java.util.ArrayList
      Result param: java.util.ArrayList
{
return ($r)basemod.patches.com.megacrit.cardcrawl.unlock.UnlockTracker.GetUnlockBundleSwitch.Postfix($_, $1, $2);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.MonsterHelper.GetEncounterName]
 - Patching [com.megacrit.cardcrawl.helpers.MonsterHelper.getEncounterName(java.lang.String)]
 - Adding Postfix...
      Return: java.lang.String
      Result param: java.lang.String
{
return ($r)basemod.patches.com.megacrit.cardcrawl.helpers.MonsterHelper.GetEncounterName.Postfix($_, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.OpenFix$OpenTextureFix]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.loadPortraitImg()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.OpenFix$OpenTextureFix.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PostInitializeStarterDeckHookSwitch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.initializeStarterDeck()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PostInitializeStarterDeckHookSwitch.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.CombatRewardScreen.RewardsScrolling$ScrollUpdate]
 - Patching [com.megacrit.cardcrawl.screens.CombatRewardScreen.rewardViewUpdate()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.CombatRewardScreen.RewardsScrolling$ScrollUpdate.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.RelicLibrary.PopulatePools]
 - Patching [com.megacrit.cardcrawl.helpers.RelicLibrary.populateRelicPool(java.util.ArrayList,com.megacrit.cardcrawl.relics.AbstractRelic$RelicTier,com.megacrit.cardcrawl.characters.AbstractPlayer$PlayerClass)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.RelicLibrary.PopulatePools.Postfix($1, $2, $3);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.EverythingFix$Open]
 - Patching [com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.open()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen.EverythingFix$Open.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.charSelect.CharacterOption.CorrectRemainingUnlocks$TextureConstructor]
 - Patching [com.megacrit.cardcrawl.screens.charSelect.CharacterOption(java.lang.String,com.megacrit.cardcrawl.characters.AbstractPlayer,com.badlogic.gdx.graphics.Texture,com.badlogic.gdx.graphics.Texture)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.charSelect.CharacterOption.CorrectRemainingUnlocks$TextureConstructor.correctAmount($0, $1, $2, $3, $4);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.CurseCardsPatch]
 - Patching [com.megacrit.cardcrawl.helpers.CardLibrary.addCurseCards()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.CardLibrary.CurseCardsPatch.Postfix();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.audio.SoundMaster.AddAudio]
 - Patching [com.megacrit.cardcrawl.audio.SoundMaster()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.audio.SoundMaster.AddAudio.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PotionGetHooks$Two]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.obtainPotion(com.megacrit.cardcrawl.potions.AbstractPotion)]
 - Adding Postfix...
      Return: boolean
      Result param: boolean
{
return ($r)basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PotionGetHooks$Two.Postfix($_, $0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.DeathScreen.NotFoundFix]
 - Patching [com.megacrit.cardcrawl.screens.DeathScreen.calculateUnlockProgress()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.DeathScreen.NotFoundFix.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierAtEndOfTurn]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.applyEndOfTurnTriggers()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierAtEndOfTurn.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.ActChangeHooks$InGameConstructor]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon(java.lang.String,java.lang.String,com.megacrit.cardcrawl.characters.AbstractPlayer,java.util.ArrayList)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.ActChangeHooks$InGameConstructor.Postfix($0, $1, $2, $3, $4);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.localization.LocalizedStrings.EditStrings]
 - Patching [com.megacrit.cardcrawl.localization.LocalizedStrings()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.localization.LocalizedStrings.EditStrings.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PlayerUpdateHooks]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.update()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.PlayerUpdateHooks.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.PostInitializeHook]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame.create()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.core.CardCrawlGame.PostInitializeHook.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.RelicLibrary.PopulateLists]
 - Patching [com.megacrit.cardcrawl.helpers.RelicLibrary.addClassSpecificRelics(java.util.ArrayList)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.helpers.RelicLibrary.PopulateLists.Postfix($1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.unlock.UnlockTracker.CountModdedUnlockCards]
 - Patching [com.megacrit.cardcrawl.unlock.UnlockTracker.countUnlockedCards()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.unlock.UnlockTracker.CountModdedUnlockCards.countModdedUnlocks();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.ActChangeHooks$SavedGameConstructor]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon(java.lang.String,com.megacrit.cardcrawl.characters.AbstractPlayer,com.megacrit.cardcrawl.saveAndContinue.SaveFile)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.ActChangeHooks$SavedGameConstructor.Postfix($0, $1, $2, $3);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.rooms.AbstractRoom.EndBattleHook]
 - Patching [com.megacrit.cardcrawl.rooms.AbstractRoom.endBattle()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.rooms.AbstractRoom.EndBattleHook.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.TitleFontSize$UseCustomFontSize]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderTitle(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.TitleFontSize$UseCustomFontSize.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.FixExpungerDescription]
 - Patching [com.megacrit.cardcrawl.cards.tempCards.Expunger.makeStatEquivalentCopy()]
 - Adding Postfix...
      Return: com.megacrit.cardcrawl.cards.AbstractCard
      Result param: com.megacrit.cardcrawl.cards.AbstractCard
{
return ($r)basemod.patches.com.megacrit.cardcrawl.cards.FixExpungerDescription.Postfix($_, $0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnApplyPowers]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.applyPowers()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierOnApplyPowers.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.ColorTabBarFix$GetBarColor]
 - Patching [com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.getBarColor()]
 - Adding Postfix...
      Return: com.badlogic.gdx.graphics.Color
      Result param: com.badlogic.gdx.graphics.Color
{
return ($r)basemod.patches.com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar.ColorTabBarFix$GetBarColor.Postfix($_, $0);
}

Patch Class: [basemod.patches.whatmod.RelicView]
 - Patching [com.megacrit.cardcrawl.screens.SingleRelicViewPopup.renderTips(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Adding Postfix...
{
basemod.patches.whatmod.RelicView.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.PowersModified]
 - Patching [com.megacrit.cardcrawl.dungeons.AbstractDungeon.onModifyPower()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.dungeons.AbstractDungeon.PowersModified.Postfix();
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.shop.ShopScreen.PostCreateShopRelicHook]
 - Patching [com.megacrit.cardcrawl.shop.ShopScreen.initRelics()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.shop.ShopScreen.PostCreateShopRelicHook.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.PotionLibrary.PotionHelperGetPotions]
 - Patching [com.megacrit.cardcrawl.helpers.PotionHelper.getPotions(com.megacrit.cardcrawl.characters.AbstractPlayer$PlayerClass,boolean)]
 - Adding Postfix...
      Return: java.util.ArrayList
      Result param: java.util.ArrayList
{
return ($r)basemod.patches.com.megacrit.cardcrawl.helpers.PotionLibrary.PotionHelperGetPotions.Postfix($_, $1, $2);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.TagBasicCards$Forms]
 - Patching [com.megacrit.cardcrawl.cards.blue.EchoForm()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.TagBasicCards$Forms.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.TagBasicCards$Forms]
 - Patching [com.megacrit.cardcrawl.cards.green.WraithForm()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.TagBasicCards$Forms.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.DeathScreen.PostDeathHook]
 - Patching [com.megacrit.cardcrawl.screens.VictoryScreen(com.megacrit.cardcrawl.monsters.MonsterGroup)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.DeathScreen.PostDeathHook.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShrinkInitializeDescription]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescriptionCN()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShrinkInitializeDescription.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShrinkInitializeDescription]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescription()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$ShrinkInitializeDescription.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.TagBasicCards$Forms]
 - Patching [com.megacrit.cardcrawl.cards.purple.DevaForm()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.TagBasicCards$Forms.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterEnergyKeyword]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescription()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterEnergyKeyword.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterEnergyKeyword]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.initializeDescriptionCN()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderDescriptionEnergy$AlterEnergyKeyword.Postfix($0);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.DeathScreen.PostDeathHook]
 - Patching [com.megacrit.cardcrawl.screens.DeathScreen(com.megacrit.cardcrawl.monsters.MonsterGroup)]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.screens.DeathScreen.PostDeathHook.Postfix($0, $1);
}

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.TagBasicCards$Forms]
 - Patching [com.megacrit.cardcrawl.cards.red.DemonForm()]
 - Adding Postfix...
{
basemod.patches.com.megacrit.cardcrawl.cards.TagBasicCards$Forms.Postfix($0);
}

Patch Class: [kobting.friendlyminions.patches.PlayerMethodPatches$EndOfTurnPatch]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.applyEndOfTurnTriggers()]
 - Adding Postfix...
{
kobting.friendlyminions.patches.PlayerMethodPatches$EndOfTurnPatch.Postfix($0);
}

Patch Class: [kobting.friendlyminions.patches.PlayerMethodPatches$UpdatePatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.update()]
 - Adding Postfix...
{
kobting.friendlyminions.patches.PlayerMethodPatches$UpdatePatch.Postfix($0);
}

Patch Class: [kobting.friendlyminions.patches.PlayerMethodPatches$UpdatePowersPatch]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.updatePowers()]
 - Adding Postfix...
{
kobting.friendlyminions.patches.PlayerMethodPatches$UpdatePowersPatch.Postfix($0);
}

Patch Class: [kobting.friendlyminions.patches.PlayerMethodPatches$ApplyStartOfTurnPostDrawPowersPatch]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.applyStartOfTurnPostDrawPowers()]
 - Adding Postfix...
{
kobting.friendlyminions.patches.PlayerMethodPatches$ApplyStartOfTurnPostDrawPowersPatch.Postfix($0);
}

Patch Class: [kobting.friendlyminions.patches.MonsterSetMovePatch]
 - Patching [com.megacrit.cardcrawl.monsters.AbstractMonster.setMove(java.lang.String,byte,com.megacrit.cardcrawl.monsters.AbstractMonster$Intent,int,int,boolean)]
 - Adding Postfix...
{
kobting.friendlyminions.patches.MonsterSetMovePatch.Postfix($0, $1, $2, $3, $4, $5, $6);
}

Patch Class: [kobting.friendlyminions.patches.PlayerMethodPatches$ApplyTurnPowersPatch]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.applyTurnPowers()]
 - Adding Postfix...
{
kobting.friendlyminions.patches.PlayerMethodPatches$ApplyTurnPowersPatch.Postfix($0);
}

Patch Class: [kobting.friendlyminions.patches.PlayerMethodPatches$ApplyStartOfTurnPowersPatch]
 - Patching [com.megacrit.cardcrawl.core.AbstractCreature.applyStartOfTurnPowers()]
 - Adding Postfix...
{
kobting.friendlyminions.patches.PlayerMethodPatches$ApplyStartOfTurnPowersPatch.Postfix($0);
}

Patch Class: [kobting.friendlyminions.patches.PlayerMethodPatches$PreBattlePatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.preBattlePrep()]
 - Adding Postfix...
{
kobting.friendlyminions.patches.PlayerMethodPatches$PreBattlePatch.Postfix($0);
}

Patch Class: [com.evacipated.cardcrawl.modthespire.patches.modsscreen.BaseMod.ModBadgeOnClick]
 - Patching [basemod.ModBadge.onClick()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$BurstPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.BurstPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$SkillBurnPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.SkillBurnPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$StasisPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.StasisPower(com.megacrit.cardcrawl.core.AbstractCreature,com.megacrit.cardcrawl.cards.AbstractCard)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$BarricadePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.BarricadePower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$PlatedArmorPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.PlatedArmorPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$TimeWarpPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.TimeWarpPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$DrawPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.DrawPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.stats.CharStat.UnlockStats]
 - Patching [com.megacrit.cardcrawl.screens.stats.CharStat(com.megacrit.cardcrawl.characters.AbstractPlayer)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$HeatsinkPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.HeatsinkPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$RechargingCorePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.RechargingCorePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$AmplifyPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.AmplifyPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$FireBreathingPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.FireBreathingPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$DoubleTapPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.DoubleTapPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$ConfusionPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ConfusionPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$GenericStrengthUpPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.GenericStrengthUpPower(com.megacrit.cardcrawl.core.AbstractCreature,java.lang.String,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$ExplosivePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ExplosivePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$CuriosityPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.CuriosityPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$IntangiblePlayerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.IntangiblePlayerPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$LightningMasteryPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.LightningMasteryPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$TheBombPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.TheBombPower(com.megacrit.cardcrawl.core.AbstractCreature,int,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$InvinciblePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.InvinciblePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$SplitPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.SplitPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$StaticDischargePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.StaticDischargePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$DarkEmbracePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.DarkEmbracePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$BerserkPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.BerserkPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$GrowthPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.GrowthPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$DoubleDamagePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.DoubleDamagePower(com.megacrit.cardcrawl.core.AbstractCreature,int,boolean)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$WeakPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.WeakPower(com.megacrit.cardcrawl.core.AbstractCreature,int,boolean)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$SlowPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.SlowPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$VulnerablePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.VulnerablePower(com.megacrit.cardcrawl.core.AbstractCreature,int,boolean)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$PenNibPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.PenNibPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$MagnetismPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.MagnetismPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$ShiftingPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ShiftingPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$CorruptionPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.CorruptionPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$FlightPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.FlightPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$NoxiousFumesPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.NoxiousFumesPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$DrawReductionPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.DrawReductionPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$TimeMazePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.TimeMazePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$GainStrengthPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.GainStrengthPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$HelloPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.HelloPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$ChokePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ChokePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$BlurPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.BlurPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$SharpHidePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.SharpHidePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$NightmarePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.NightmarePower(com.megacrit.cardcrawl.core.AbstractCreature,int,com.megacrit.cardcrawl.cards.AbstractCard)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$BiasPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.BiasPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$WraithFormPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.WraithFormPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$RitualPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.RitualPower(com.megacrit.cardcrawl.core.AbstractCreature,int,boolean)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$LoseStrengthPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.LoseStrengthPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$RepairPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.RepairPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$ArtifactPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ArtifactPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$RegenPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.RegenPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$FlameBarrierPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.FlameBarrierPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$EnergizedBluePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.EnergizedBluePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$FadingPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.FadingPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$CombustPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.CombustPower(com.megacrit.cardcrawl.core.AbstractCreature,int,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$BrutalityPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.BrutalityPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.whatmod.PotionTips]
 - Patching [com.megacrit.cardcrawl.core.CardCrawlGame(java.lang.String)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$EnergizedPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.EnergizedPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$BufferPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.BufferPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$UnawakenedPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.UnawakenedPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$ModeShiftPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ModeShiftPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$StormPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.StormPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$CreativeAIPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.CreativeAIPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$ThousandCutsPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ThousandCutsPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$ToolsOfTheTradePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ToolsOfTheTradePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$EchoPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.EchoPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$ForceFieldPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ForcefieldPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.RenderCustomDynamicVariable]
 - Patching [com.megacrit.cardcrawl.cards.AbstractCard.renderDescription(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$ElectroPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ElectroPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$LockOnPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.LockOnPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$PoisonPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.PoisonPower(com.megacrit.cardcrawl.core.AbstractCreature,com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$AccuracyPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.AccuracyPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$DemonFormPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.DemonFormPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$RupturePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.RupturePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$RegrowPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.RegrowPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$ThieveryPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ThieveryPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$BackAttackPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.BackAttackPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$NextTurnBlockPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.NextTurnBlockPower(com.megacrit.cardcrawl.core.AbstractCreature,int,java.lang.String)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$DrawCardNextTurnPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.DrawCardNextTurnPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$WinterPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.WinterPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$FocusPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.FocusPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$NoBlockPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.NoBlockPower(com.megacrit.cardcrawl.core.AbstractCreature,int,boolean)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$FeelNoPainPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.FeelNoPainPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$InfiniteBladesPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.InfiniteBladesPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$EvolvePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.EvolvePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$PhantasmalPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.PhantasmalPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$AngryPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.AngryPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$SporeCloudPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.SporeCloudPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$EntanglePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.EntanglePower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$SurroundedPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.SurroundedPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$AfterImagePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.AfterImagePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$SadisticPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.SadisticPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.RenderCustomDynamicVariable]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.renderDescription(com.badlogic.gdx.graphics.g2d.SpriteBatch)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$EnvenomPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.EnvenomPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$IntangiblePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.IntangiblePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$RagePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.RagePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$DexterityPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.DexterityPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$AttackBurnPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.AttackBurnPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$ReactivePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ReactivePower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$AngerPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.AngerPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$EquilibriumPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.EquilibriumPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$FrailPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.FrailPower(com.megacrit.cardcrawl.core.AbstractCreature,int,boolean)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$MalleablePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.MalleablePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$NoDrawPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.NoDrawPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$BeatOfDeathPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.BeatOfDeathPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$LoopPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.LoopPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$RetainCardPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.RetainCardPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$RegenerateMonsterPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.RegenerateMonsterPower(com.megacrit.cardcrawl.monsters.AbstractMonster,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$HexPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.HexPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$CorpseExplosionPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.CorpseExplosionPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$PainfulStabsPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.PainfulStabsPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$JuggernautPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.JuggernautPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$ConservePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ConservePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$ReboundPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ReboundPower(com.megacrit.cardcrawl.core.AbstractCreature)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$CurlUpPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.CurlUpPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.cards.CardGroup.ModalExhaustFix]
 - Patching [com.megacrit.cardcrawl.cards.CardGroup.moveToExhaustPile(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$ThornsPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ThornsPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$PanachePowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.PanachePower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$ConstrictPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.ConstrictedPower(com.megacrit.cardcrawl.core.AbstractCreature,com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.helpers.CardHelper.GOGGetColorFix]
 - Patching [com.megacrit.cardcrawl.helpers.CardHelper()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$StrengthPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.StrengthPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.powers.CloneablePowersPatch$MayhemPowerPatch]
 - Patching [com.megacrit.cardcrawl.powers.MayhemPower(com.megacrit.cardcrawl.core.AbstractCreature,int)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.unique.ExhumeAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.common.DrawCardAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.utility.ExhaustToHandAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.unique.AttackFromDeckToHandAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.common.MakeTempCardInHandAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.characters.AbstractPlayer.draw()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.watcher.MeditateAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$ResetScrolling]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.open(com.megacrit.cardcrawl.cards.AbstractCard)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.defect.SeekAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.common.BetterDrawPileToHandAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.utility.DrawPileToHandAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.cards.purple.Scrawl.use(com.megacrit.cardcrawl.characters.AbstractPlayer,com.megacrit.cardcrawl.monsters.AbstractMonster)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.watcher.FlickerReturnToHandAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.common.BetterDiscardPileToHandAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.unique.DiscoveryAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.defect.DiscardPileToHandAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.watcher.ForeignInfluenceAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.defect.ScrapeAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.utility.DrawPileToHandAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$ResetScrolling]
 - Patching [com.megacrit.cardcrawl.screens.SingleCardViewPopup.open(com.megacrit.cardcrawl.cards.AbstractCard,com.megacrit.cardcrawl.cards.CardGroup)]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.unique.SkillFromDeckToHandAction.update()]
 - Raw Javassist...

Patch Class: [basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch]
 - Patching [com.megacrit.cardcrawl.actions.utility.DiscardToHandAction.update()]
 - Raw Javassist...

Done.
Compiling patched classes...
  basemod.BaseMod
  basemod.ModBadge
  basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.CardModifierPatches$CardModifierFields
  basemod.patches.com.megacrit.cardcrawl.cards.AbstractCard.ShrinkLongDescription$Scale
  basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.MaxHandSizePatch$SaveField
  basemod.patches.com.megacrit.cardcrawl.characters.AbstractPlayer.SeenEvents
  basemod.patches.com.megacrit.cardcrawl.saveAndContinue.SaveFile.ModSaves
  basemod.patches.com.megacrit.cardcrawl.screens.SingleCardViewPopup.ScrollingTooltips$IsScrolling
  basemod.patches.com.megacrit.cardcrawl.screens.select.GridCardSelectScreen.GridCardSelectScreenFields
  com.badlogic.gdx.backends.lwjgl.LwjglApplication
  com.megacrit.cardcrawl.actions.GameActionManager
  com.megacrit.cardcrawl.audio.SoundMaster
  com.megacrit.cardcrawl.cards.AbstractCard
  com.megacrit.cardcrawl.cards.CardGroup
  com.megacrit.cardcrawl.cards.DescriptionLine
  com.megacrit.cardcrawl.core.AbstractCreature
  com.megacrit.cardcrawl.core.CardCrawlGame
  com.megacrit.cardcrawl.core.EnergyManager
  com.megacrit.cardcrawl.credits.CreditsScreen
  com.megacrit.cardcrawl.cutscenes.Cutscene
  com.megacrit.cardcrawl.dungeons.AbstractDungeon
  com.megacrit.cardcrawl.events.AbstractEvent
  com.megacrit.cardcrawl.helpers.CardHelper
  com.megacrit.cardcrawl.helpers.CardLibrary
  com.megacrit.cardcrawl.helpers.EventHelper
  com.megacrit.cardcrawl.helpers.FontHelper
  com.megacrit.cardcrawl.helpers.GameDictionary
  com.megacrit.cardcrawl.helpers.GetAllInBattleInstances
  com.megacrit.cardcrawl.helpers.MonsterHelper
  com.megacrit.cardcrawl.helpers.PotionHelper
  com.megacrit.cardcrawl.helpers.RelicLibrary
  com.megacrit.cardcrawl.helpers.TipHelper
  com.megacrit.cardcrawl.helpers.input.InputAction
  com.megacrit.cardcrawl.localization.LocalizedStrings
  com.megacrit.cardcrawl.map.MapGenerator
  com.megacrit.cardcrawl.monsters.MonsterInfo
  com.megacrit.cardcrawl.potions.AbstractPotion
  com.megacrit.cardcrawl.relics.AbstractRelic
  com.megacrit.cardcrawl.rewards.RewardItem
  com.megacrit.cardcrawl.rooms.AbstractRoom
  com.megacrit.cardcrawl.rooms.CampfireUI
  com.megacrit.cardcrawl.saveAndContinue.SaveAndContinue
  com.megacrit.cardcrawl.saveAndContinue.SaveFile
  com.megacrit.cardcrawl.screens.CombatRewardScreen
  com.megacrit.cardcrawl.screens.DeathScreen
  com.megacrit.cardcrawl.screens.SingleCardViewPopup
  com.megacrit.cardcrawl.screens.SingleRelicViewPopup
  com.megacrit.cardcrawl.screens.VictoryScreen
  com.megacrit.cardcrawl.screens.charSelect.CharacterOption
  com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen
  com.megacrit.cardcrawl.screens.compendium.RelicViewScreen
  com.megacrit.cardcrawl.screens.custom.CustomModeScreen
  com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar
  com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen
  com.megacrit.cardcrawl.screens.mainMenu.MenuButton
  com.megacrit.cardcrawl.screens.mainMenu.MenuPanelScreen
  com.megacrit.cardcrawl.screens.options.OptionsPanel
  com.megacrit.cardcrawl.screens.options.SettingsScreen
  com.megacrit.cardcrawl.screens.runHistory.RunHistoryScreen
  com.megacrit.cardcrawl.screens.runHistory.TinyCard
  com.megacrit.cardcrawl.screens.select.GridCardSelectScreen
  com.megacrit.cardcrawl.screens.stats.CharStat
  com.megacrit.cardcrawl.screens.stats.StatsScreen
  com.megacrit.cardcrawl.shop.ShopScreen
  com.megacrit.cardcrawl.ui.buttons.CancelButton
  com.megacrit.cardcrawl.ui.buttons.ProceedButton
  com.megacrit.cardcrawl.ui.campfire.AbstractCampfireOption
  com.megacrit.cardcrawl.ui.panels.PotionPopUp
  com.megacrit.cardcrawl.ui.panels.TopPanel
  com.megacrit.cardcrawl.unlock.UnlockTracker
  kobting.friendlyminions.patches.MonsterAddFieldsPatch
  kobting.friendlyminions.patches.PlayerAddFieldsPatch
  basemod.abstracts.CustomCard
  com.megacrit.cardcrawl.actions.common.ApplyPowerAction
  com.megacrit.cardcrawl.actions.common.BetterDiscardPileToHandAction
  com.megacrit.cardcrawl.actions.common.BetterDrawPileToHandAction
  com.megacrit.cardcrawl.actions.common.DamageAllEnemiesAction
  com.megacrit.cardcrawl.actions.common.DrawCardAction
  com.megacrit.cardcrawl.actions.common.MakeTempCardInHandAction
  com.megacrit.cardcrawl.actions.defect.DiscardPileToHandAction
  com.megacrit.cardcrawl.actions.defect.ScrapeAction
  com.megacrit.cardcrawl.actions.defect.SeekAction
  com.megacrit.cardcrawl.actions.unique.AttackFromDeckToHandAction
  com.megacrit.cardcrawl.actions.unique.DiscoveryAction
  com.megacrit.cardcrawl.actions.unique.ExhumeAction
  com.megacrit.cardcrawl.actions.unique.RestoreRetainedCardsAction
  com.megacrit.cardcrawl.actions.unique.SkillFromDeckToHandAction
  com.megacrit.cardcrawl.actions.unique.VampireDamageAllEnemiesAction
  com.megacrit.cardcrawl.actions.utility.DiscardToHandAction
  com.megacrit.cardcrawl.actions.utility.DrawPileToHandAction
  com.megacrit.cardcrawl.actions.utility.ExhaustToHandAction
  com.megacrit.cardcrawl.actions.utility.UseCardAction
  com.megacrit.cardcrawl.actions.watcher.FlickerReturnToHandAction
  com.megacrit.cardcrawl.actions.watcher.ForeignInfluenceAction
  com.megacrit.cardcrawl.actions.watcher.MeditateAction
  com.megacrit.cardcrawl.cards.AbstractCard$CardTags
  com.megacrit.cardcrawl.cards.blue.EchoForm
  com.megacrit.cardcrawl.cards.green.WraithForm
  com.megacrit.cardcrawl.cards.purple.DevaForm
  com.megacrit.cardcrawl.cards.purple.Scrawl
  com.megacrit.cardcrawl.cards.red.DemonForm
  com.megacrit.cardcrawl.cards.tempCards.Expunger
  com.megacrit.cardcrawl.characters.AbstractPlayer
  com.megacrit.cardcrawl.dungeons.AbstractDungeon$CurrentScreen
  com.megacrit.cardcrawl.monsters.AbstractMonster
  com.megacrit.cardcrawl.monsters.AbstractMonster$Intent
  com.megacrit.cardcrawl.powers.AccuracyPower
  com.megacrit.cardcrawl.powers.AfterImagePower
  com.megacrit.cardcrawl.powers.AmplifyPower
  com.megacrit.cardcrawl.powers.AngerPower
  com.megacrit.cardcrawl.powers.AngryPower
  com.megacrit.cardcrawl.powers.ArtifactPower
  com.megacrit.cardcrawl.powers.AttackBurnPower
  com.megacrit.cardcrawl.powers.BackAttackPower
  com.megacrit.cardcrawl.powers.BarricadePower
  com.megacrit.cardcrawl.powers.BeatOfDeathPower
  com.megacrit.cardcrawl.powers.BerserkPower
  com.megacrit.cardcrawl.powers.BiasPower
  com.megacrit.cardcrawl.powers.BlurPower
  com.megacrit.cardcrawl.powers.BrutalityPower
  com.megacrit.cardcrawl.powers.BufferPower
  com.megacrit.cardcrawl.powers.BurstPower
  com.megacrit.cardcrawl.powers.ChokePower
  com.megacrit.cardcrawl.powers.CombustPower
  com.megacrit.cardcrawl.powers.ConfusionPower
  com.megacrit.cardcrawl.powers.ConservePower
  com.megacrit.cardcrawl.powers.ConstrictedPower
  com.megacrit.cardcrawl.powers.CorpseExplosionPower
  com.megacrit.cardcrawl.powers.CorruptionPower
  com.megacrit.cardcrawl.powers.CreativeAIPower
  com.megacrit.cardcrawl.powers.CuriosityPower
  com.megacrit.cardcrawl.powers.CurlUpPower
  com.megacrit.cardcrawl.powers.DarkEmbracePower
  com.megacrit.cardcrawl.powers.DemonFormPower
  com.megacrit.cardcrawl.powers.DexterityPower
  com.megacrit.cardcrawl.powers.DoubleDamagePower
  com.megacrit.cardcrawl.powers.DoubleTapPower
  com.megacrit.cardcrawl.powers.DrawCardNextTurnPower
  com.megacrit.cardcrawl.powers.DrawPower
  com.megacrit.cardcrawl.powers.DrawReductionPower
  com.megacrit.cardcrawl.powers.EchoPower
  com.megacrit.cardcrawl.powers.ElectroPower
  com.megacrit.cardcrawl.powers.EnergizedBluePower
  com.megacrit.cardcrawl.powers.EnergizedPower
  com.megacrit.cardcrawl.powers.EntanglePower
  com.megacrit.cardcrawl.powers.EnvenomPower
  com.megacrit.cardcrawl.powers.EquilibriumPower
  com.megacrit.cardcrawl.powers.EvolvePower
  com.megacrit.cardcrawl.powers.ExplosivePower
  com.megacrit.cardcrawl.powers.FadingPower
  com.megacrit.cardcrawl.powers.FeelNoPainPower
  com.megacrit.cardcrawl.powers.FireBreathingPower
  com.megacrit.cardcrawl.powers.FlameBarrierPower
  com.megacrit.cardcrawl.powers.FlightPower
  com.megacrit.cardcrawl.powers.FocusPower
  com.megacrit.cardcrawl.powers.ForcefieldPower
  com.megacrit.cardcrawl.powers.FrailPower
  com.megacrit.cardcrawl.powers.GainStrengthPower
  com.megacrit.cardcrawl.powers.GenericStrengthUpPower
  com.megacrit.cardcrawl.powers.GrowthPower
  com.megacrit.cardcrawl.powers.HeatsinkPower
  com.megacrit.cardcrawl.powers.HelloPower
  com.megacrit.cardcrawl.powers.HexPower
  com.megacrit.cardcrawl.powers.InfiniteBladesPower
  com.megacrit.cardcrawl.powers.IntangiblePlayerPower
  com.megacrit.cardcrawl.powers.IntangiblePower
  com.megacrit.cardcrawl.powers.InvinciblePower
  com.megacrit.cardcrawl.powers.JuggernautPower
  com.megacrit.cardcrawl.powers.LightningMasteryPower
  com.megacrit.cardcrawl.powers.LockOnPower
  com.megacrit.cardcrawl.powers.LoopPower
  com.megacrit.cardcrawl.powers.LoseStrengthPower
  com.megacrit.cardcrawl.powers.MagnetismPower
  com.megacrit.cardcrawl.powers.MalleablePower
  com.megacrit.cardcrawl.powers.MayhemPower
  com.megacrit.cardcrawl.powers.ModeShiftPower
  com.megacrit.cardcrawl.powers.NextTurnBlockPower
  com.megacrit.cardcrawl.powers.NightmarePower
  com.megacrit.cardcrawl.powers.NoBlockPower
  com.megacrit.cardcrawl.powers.NoDrawPower
  com.megacrit.cardcrawl.powers.NoxiousFumesPower
  com.megacrit.cardcrawl.powers.PainfulStabsPower
  com.megacrit.cardcrawl.powers.PanachePower
  com.megacrit.cardcrawl.powers.PenNibPower
  com.megacrit.cardcrawl.powers.PhantasmalPower
  com.megacrit.cardcrawl.powers.PlatedArmorPower
  com.megacrit.cardcrawl.powers.PoisonPower
  com.megacrit.cardcrawl.powers.RagePower
  com.megacrit.cardcrawl.powers.ReactivePower
  com.megacrit.cardcrawl.powers.ReboundPower
  com.megacrit.cardcrawl.powers.RechargingCorePower
  com.megacrit.cardcrawl.powers.RegenPower
  com.megacrit.cardcrawl.powers.RegenerateMonsterPower
  com.megacrit.cardcrawl.powers.RegrowPower
  com.megacrit.cardcrawl.powers.RepairPower
  com.megacrit.cardcrawl.powers.RetainCardPower
  com.megacrit.cardcrawl.powers.RitualPower
  com.megacrit.cardcrawl.powers.RupturePower
  com.megacrit.cardcrawl.powers.SadisticPower
  com.megacrit.cardcrawl.powers.SharpHidePower
  com.megacrit.cardcrawl.powers.ShiftingPower
  com.megacrit.cardcrawl.powers.SkillBurnPower
  com.megacrit.cardcrawl.powers.SlowPower
  com.megacrit.cardcrawl.powers.SplitPower
  com.megacrit.cardcrawl.powers.SporeCloudPower
  com.megacrit.cardcrawl.powers.StasisPower
  com.megacrit.cardcrawl.powers.StaticDischargePower
  com.megacrit.cardcrawl.powers.StormPower
  com.megacrit.cardcrawl.powers.StrengthPower
  com.megacrit.cardcrawl.powers.SurroundedPower
  com.megacrit.cardcrawl.powers.TheBombPower
  com.megacrit.cardcrawl.powers.ThieveryPower
  com.megacrit.cardcrawl.powers.ThornsPower
  com.megacrit.cardcrawl.powers.ThousandCutsPower
  com.megacrit.cardcrawl.powers.TimeMazePower
  com.megacrit.cardcrawl.powers.TimeWarpPower
  com.megacrit.cardcrawl.powers.ToolsOfTheTradePower
  com.megacrit.cardcrawl.powers.UnawakenedPower
  com.megacrit.cardcrawl.powers.VulnerablePower
  com.megacrit.cardcrawl.powers.WeakPower
  com.megacrit.cardcrawl.powers.WinterPower
  com.megacrit.cardcrawl.powers.WraithFormPower
  com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar$CurrentTab
  com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen$CurScreen
  com.megacrit.cardcrawl.screens.mainMenu.MenuButton$ClickResult
  com.megacrit.cardcrawl.trials.MyTrueFormTrial
  basemod.abstracts.CustomMonster
  basemod.abstracts.CustomPlayer
  com.megacrit.cardcrawl.events.shrines.NoteForYourself
Done.
Busting enums...
com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen$CurScreen
  com.megacrit.cardcrawl.screens.mainMenu.MainMenuScreen$1
1 switch statement(s)

com.megacrit.cardcrawl.screens.mainMenu.MenuButton$ClickResult
  com.megacrit.cardcrawl.screens.mainMenu.MenuButton$1
1 switch statement(s)

com.megacrit.cardcrawl.cards.AbstractCard$CardTags
0 switch statement(s)

com.megacrit.cardcrawl.monsters.AbstractMonster$Intent
  com.megacrit.cardcrawl.monsters.AbstractMonster$1
1 switch statement(s)

com.megacrit.cardcrawl.dungeons.AbstractDungeon$CurrentScreen
  com.megacrit.cardcrawl.dungeons.AbstractDungeon$1
1 switch statement(s)

com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar$CurrentTab
  com.megacrit.cardcrawl.screens.compendium.CardLibraryScreen$1
  com.megacrit.cardcrawl.screens.mainMenu.ColorTabBar$1
2 switch statement(s)
Done.

Setting isModded = true...Done.

Adding ModTheSpire to version...Done.

Initializing mods...
 - BaseMod
   - basemod.BaseMod
libgdx version 1.9.5
22:41:10.518 INFO basemod.BaseMod> initializeGson
22:41:10.534 INFO basemod.BaseMod> initializeTypeMaps
22:41:10.535 INFO basemod.BaseMod> Registered MonsterStrings
22:41:10.537 INFO basemod.BaseMod> Registered PowerStrings
22:41:10.537 INFO basemod.BaseMod> Registered CardStrings
22:41:10.538 INFO basemod.BaseMod> Registered RelicStrings
22:41:10.538 INFO basemod.BaseMod> Registered EventStrings
22:41:10.538 INFO basemod.BaseMod> Registered PotionStrings
22:41:10.539 INFO basemod.BaseMod> Registered CreditStrings
22:41:10.539 INFO basemod.BaseMod> Registered TutorialStrings
22:41:10.539 INFO basemod.BaseMod> Registered KeywordStrings
22:41:10.540 INFO basemod.BaseMod> Registered ScoreBonusStrings
22:41:10.541 INFO basemod.BaseMod> Registered CharacterStrings
22:41:10.541 INFO basemod.BaseMod> Registered UIStrings
22:41:10.542 INFO basemod.BaseMod> Registered OrbStrings
22:41:10.542 INFO basemod.BaseMod> Registered StanceStrings
22:41:10.542 INFO basemod.BaseMod> Registered RunModStrings
22:41:10.543 INFO basemod.BaseMod> Registered BlightStrings
22:41:10.544 INFO basemod.BaseMod> Registered AchievementStrings
22:41:10.544 INFO basemod.BaseMod> initializePowerMap
22:41:11.114 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.CollectPower) isn't Cloneable

[Thread-5] WARN io.sentry.dsn.Dsn - *** Couldn't find a suitable DSN, Sentry operations will do nothing! See documentation: https://docs.sentry.io/clients/java/ ***
[Thread-5] WARN io.sentry.DefaultSentryClientFactory - No 'stacktrace.app.packages' was configured, this option is highly recommended as it affects stacktrace grouping and display on Sentry. See documentation: https://docs.sentry.io/clients/java/config/#in-application-stack-frames22:41:11.146 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.DuplicationPower) isn't Cloneable
22:41:11.148 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.LoseDexterityPower) isn't Cloneable
22:41:11.149 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.MetallicizePower) isn't Cloneable
22:41:11.149 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.MinionPower) isn't Cloneable
22:41:11.150 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.ResurrectPower) isn't Cloneable
22:41:11.151 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.StrikeUpPower) isn't Cloneable
22:41:11.153 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDAlwaysMadPower) isn't Cloneable
22:41:11.153 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDCondensePower) isn't Cloneable
22:41:11.154 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDDisciplinePower) isn't Cloneable
22:41:11.154 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDEmotionalTurmoilPower) isn't Cloneable
22:41:11.155 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDFlickedPower) isn't Cloneable
22:41:11.155 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDFlowPower) isn't Cloneable
22:41:11.156 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDGroundedPower) isn't Cloneable
22:41:11.156 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDHotHotPower) isn't Cloneable
22:41:11.156 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDMasterRealityPower) isn't Cloneable
22:41:11.157 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDMasteryPower) isn't Cloneable
22:41:11.158 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDRetributionPower) isn't Cloneable
22:41:11.158 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.deprecated.DEPRECATEDSerenityPower) isn't Cloneable
22:41:11.159 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.BattleHymnPower) isn't Cloneable
22:41:11.159 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.BlockReturnPower) isn't Cloneable
22:41:11.160 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.CannotChangeStancePower) isn't Cloneable
22:41:11.160 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.DevaPower) isn't Cloneable
22:41:11.161 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.DevotionPower) isn't Cloneable
22:41:11.161 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.EndTurnDeathPower) isn't Cloneable
22:41:11.162 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.EnergyDownPower) isn't Cloneable
22:41:11.163 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.EstablishmentPower) isn't Cloneable
22:41:11.163 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.ForesightPower) isn't Cloneable
22:41:11.163 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.FreeAttackPower) isn't Cloneable
22:41:11.164 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.LikeWaterPower) isn't Cloneable
22:41:11.164 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.LiveForeverPower) isn't Cloneable
22:41:11.165 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.MantraPower) isn't Cloneable
22:41:11.165 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.MarkPower) isn't Cloneable
22:41:11.166 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.MasterRealityPower) isn't Cloneable
22:41:11.166 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.MentalFortressPower) isn't Cloneable
22:41:11.167 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.NirvanaPower) isn't Cloneable
22:41:11.167 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.NoSkillsPower) isn't Cloneable
22:41:11.168 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.OmegaPower) isn't Cloneable
22:41:11.168 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.OmnisciencePower) isn't Cloneable
22:41:11.169 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.RushdownPower) isn't Cloneable
22:41:11.170 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.StudyPower) isn't Cloneable
22:41:11.170 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.VaultPower) isn't Cloneable
22:41:11.171 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.VigorPower) isn't Cloneable
22:41:11.171 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.WaveOfTheHandPower) isn't Cloneable
22:41:11.172 WARN basemod.BaseMod> Power (com.megacrit.cardcrawl.powers.watcher.WrathNextTurnPower) isn't Cloneable
22:41:11.173 INFO basemod.BaseMod> initializeUnderscorePowerIDs
   - 688ms
 - Friendly Minions
   - kobting.friendlyminions.Initializer
   - 0ms
 - Souleater
   - kobting.souleater.SoulEaterMod
   - 4ms
Done.

Starting game...
22:41:11.204 INFO desktop.DesktopLauncher> time: 1594593671204
22:41:11.205 INFO desktop.DesktopLauncher> version: 2020-01-27
22:41:11.205 INFO desktop.DesktopLauncher> libgdx:  1.9.5
22:41:11.205 INFO desktop.DesktopLauncher> default_locale: en_US
22:41:11.206 INFO desktop.DesktopLauncher> default_charset: windows-1252
22:41:11.206 INFO desktop.DesktopLauncher> default_encoding: Cp1252
22:41:11.206 INFO desktop.DesktopLauncher> java_version: 1.8.0_144
22:41:11.206 INFO desktop.DesktopLauncher> os_arch: amd64
22:41:11.206 INFO desktop.DesktopLauncher> os_name: Windows 10
22:41:11.206 INFO desktop.DesktopLauncher> os_version: 10.0
22:41:11.207 INFO core.SystemStats> MEMORY STATS:
Free Memory: 72Mb
Max Memory: 3,570Mb
Allocated Memory: 821Mb
Unallocated Memory: 2,749Mb
Total Free Memory: 2,821Mb
Used Memory: 748Mb

22:41:11.208 INFO core.SystemStats> DISK STATS:
Total Space: 1,907,726Mb
Usable Space: 394,824Mb
Free Space: 394,824Mb


[Thread-5] WARN io.sentry.DefaultSentryClientFactory - No 'stacktrace.app.packages' was configured, this option is highly recommended as it affects stacktrace grouping and display on Sentry. See documentation: https://docs.sentry.io/clients/java/config/#in-application-stack-frames
[Thread-5] WARN io.sentry.DefaultSentryClientFactory - No 'stacktrace.app.packages' was configured, this option is highly recommended as it affects stacktrace grouping and display on Sentry. See documentation: https://docs.sentry.io/clients/java/config/#in-application-stack-frames
[Thread-5] WARN io.sentry.Sentry - Overwriting statically stored SentryClient instance SentryClient{release='null', dist='null', environment='null', serverName='null', tags={}, mdcTags=[], extra={}, connection=io.sentry.connection.NoopConnection@22b2f3c6, builderHelpers=[io.sentry.event.helper.ContextBuilderHelper@6fbba70], contextManager=io.sentry.context.ThreadLocalContextManager@66fe2f0d, uncaughtExceptionHandler=io.sentry.SentryUncaughtExceptionHandler@513b94c8} with SentryClient{release='null', dist='null', environment='null', serverName='null', tags={}, mdcTags=[], extra={}, connection=io.sentry.connection.AsyncConnection@642271ea, builderHelpers=[io.sentry.event.helper.ContextBuilderHelper@3f516f24], contextManager=io.sentry.context.ThreadLocalContextManager@2840a984, uncaughtExceptionHandler=io.sentry.SentryUncaughtExceptionHandler@2550f590}.22:41:11.244 INFO core.DisplayConfig> Reading info.displayconfig
22:41:11.247 INFO core.DisplayConfig> DisplayConfig successfully read.
22:41:11.247 INFO desktop.DesktopLauncher> Settings successfully loaded
22:41:11.247 INFO desktop.DesktopLauncher> Launching application...
22:41:11.946 INFO ststwitch.TwitchConfig> The 'twitchconfig.txt' already exists, not overwriting it.
22:41:11.948 INFO core.CardCrawlGame> DistributorPlatform=steam
22:41:12.078 INFO steam.SteamIntegration> [SUCCESS] Steam API initialized successfully.
22:41:12.089 INFO steam.SteamIntegration> BUILD ID: 4614548
22:41:12.089 INFO steam.SteamIntegration> CURRENT LANG: english
22:41:12.090 INFO steam.SteamIntegration> ACCOUNT ID: 135760940
22:41:12.091 INFO steam.SteamIntegration> requestGlobalStats
22:41:12.091 INFO steam.SteamTicker> Steam Ticker initialized.
22:41:12.094 INFO core.CardCrawlGame> No migration
22:41:12.105 INFO core.Settings> Initializing display settings...
22:41:12.105 INFO core.DisplayConfig> Reading info.displayconfig
22:41:12.106 INFO core.DisplayConfig> DisplayConfig successfully read.
22:41:12.106 INFO core.Settings> Initializing sound settings...
22:41:12.107 INFO core.Settings> Initializing game settings...
22:41:12.140 INFO localization.LocalizedStrings> Loc Strings load time: 25ms
22:41:12.141 INFO basemod.BaseMod> begin editing localization strings
22:41:12.144 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.RunModStrings
------- Souls Json String -------
{
  "souls" : [
    {
      "id": "AcidSlime_L",
      "name": "Soul of Acid Slime (L)",
      "atlas": "images/monsters/theBottom/slimeL/skeleton.atlas",
      "json": "images/monsters/theBottom/slimeL/skeleton.json"
    },
    {
      "id": "AcidSlime_M",
      "name": "Soul of Acid Slime (M)",
      "atlas": "images/monsters/theBottom/slimeM/skeleton.atlas",
      "json": "images/monsters/theBottom/slimeM/skeleton.json"
    },
    {
      "id": "AcidSlime_S",
      "name": "Soul of Acid Slime (S)",
      "atlas": "images/monsters/theBottom/slimeS/skeleton.atlas",
      "json": "images/monsters/theBottom/slimeS/skeleton.json"
    },
    {
      "id": "Apology Slime",
      "name": "Soul of Apology Slime",
      "atlas": "images/monsters/theBottom/slimeS/skeleton.atlas",
      "json": "images/monsters/theBottom/slimeS/skeleton.json"
    },
    {
      "id": "AwakenedOne",
      "name": "Soul of Awakened One",
      "atlas": "images/monsters/theForest/awakenedOne/skeleton.atlas",
      "json": "images/monsters/theForest/awakenedOne/skeleton.json"
    },
    {
      "id": "BanditBear",
      "name": "Soul of Bear",
      "atlas": "images/monsters/theCity/bear/skeleton.atlas",
      "json": "images/monsters/theCity/bear/skeleton.json"
    },
    {
      "id": "BanditChild",
      "name": "Soul of Pointy",
      "atlas": "images/monsters/theCity/pointy/skeleton.atlas",
      "json": "images/monsters/theCity/pointy/skeleton.json"
    },
    {
      "id": "BanditLeader",
      "name": "Soul of Romeo",
      "atlas": "images/monsters/theCity/romeo/skeleton.atlas",
      "json": "images/monsters/theCity/romeo/skeleton.json"
    },
    {
      "id": "BookOfStabbing",
      "name": "Soul of Book of Stabbing",
      "atlas": "images/monsters/theCity/stabBook/skeleton.atlas",
      "json": "images/monsters/theCity/stabBook/skeleton.json"
    },
    {
      "id": "BronzeAutomaton",
      "name": "Soul of Bronze Automaton",
      "atlas": "images/monsters/theCity/automaton/skeleton.atlas",
      "json": "images/monsters/theCity/automaton/skeleton.json"
    },
    {
      "id": "BronzeOrb",
      "name": "Soul of Orb",
      "atlas": "",
      "json": ""
    },
    {
      "id": "Byrd",
      "name": "Soul of Byrd",
      "atlas": "images/monsters/theCity/byrd/flying.atlas",
      "json": "images/monsters/theCity/byrd/flying.json"
    },
    {
      "id": "Centurion",
      "name": "Soul of Centurion",
      "atlas": "images/monsters/theCity/tank/skeleton.atlas",
      "json": "images/monsters/theCity/tank/skeleton.json"
    },
    {
      "id": "Champ",
      "name": "Soul of The Chump",
      "atlas": "images/monsters/theCity/champ/skeleton.atlas",
      "json": "images/monsters/theCity/champ/skeleton.json"
    },
    {
      "id": "Chosen",
      "name": "Soul of Chosen",
      "atlas": "images/monsters/theCity/chosen/skeleton.atlas",
      "json": "images/monsters/theCity/chosen/skeleton.json"
    },
    {
      "id": "Cultist",
      "name": "Soul of Cultist",
      "atlas": "images/monsters/theBottom/cultist/skeleton.atlas",
      "json": "images/monsters/theBottom/cultist/skeleton.json"
    },
    {
      "id": "Darkling",
      "name": "Soul of Darkling",
      "atlas": "images/monsters/theForest/darkling/skeleton.atlas",
      "json": "images/monsters/theForest/darkling/skeleton.json"
    },
    {
      "id": "Deca",
      "name": "Soul of Deca",
      "atlas": "images/monsters/theForest/deca/skeleton.atlas",
      "json": "images/monsters/theForest/deca/skeleton.json"
    },
    {
      "id": "Donu",
      "name": "Soul of Donu",
      "atlas": "images/monsters/theForest/donu/skeleton.atlas",
      "json": "images/monsters/theForest/donu/skeleton.json"
    },
    {
      "id": "Exploder",
      "name": "Soul of Exploder",
      "atlas": "images/monsters/theForest/exploder/skeleton.atlas",
      "json": "images/monsters/theForest/exploder/skeleton.json"
    },
    {
      "id": "FireOrb",
      "name": "Soul of Fire Orb",
      "atlas": "",
      "json": ""
    },
    {
      "id": "Dagger",
      "name": "Soul of Dagger",
      "atlas": "",
      "json": ""
    },
    {
      "id": "FlameBruiser",
      "name": "Soul of Flame Bruiser",
      "atlas": "",
      "json": ""
    },
    {
      "id": "Reptomancer",
      "name": "Soul of Reptomancer",
      "atlas": "images/monsters/theForest/mage/skeleton.atlas",
      "json": "images/monsters/theForest/mage/skeleton.json"
    },
    {
      "id": "FungiBeast",
      "name": "Soul of Beast Fun Guy",
      "atlas": "images/monsters/theBottom/fungi/skeleton.atlas",
      "json": "images/monsters/theBottom/fungi/skeleton.json"
    },
    {
      "id": "FuzzyLouseDefensive",
      "name": "Soul of Louse",
      "atlas": "images/monsters/theBottom/louseGreen/skeleton.atlas",
      "json": "images/monsters/theBottom/louseGreen/skeleton.json"
    },
    {
      "id": "FuzzyLouseNormal",
      "name": "Soul of Louse",
      "atlas": "images/monsters/theBottom/louseRed/skeleton.atlas",
      "json": "images/monsters/theBottom/louseRed/skeleton.json"
    },
    {
      "id": "GiantHead",
      "name": "Soul of Giant Head",
      "atlas": "images/monsters/theForest/head/skeleton.atlas",
      "json": "images/monsters/theForest/head/skeleton.json"
    },
    {
      "id": "GremlinFat",
      "name": "Soul of Fat Gremlin",
      "atlas": "images/monsters/theBottom/fatGremlin/skeleton.atlas",
      "json": "images/monsters/theBottom/fatGremlin/skeleton.json"
    },
    {
      "id": "GremlinLeader",
      "name": "Soul of Gremlin Leader",
      "atlas": "images/monsters/theCity/gremlinleader/skeleton.atlas",
      "json": "images/monsters/theCity/gremlinleader/skeleton.json"
    },
    {
      "id": "GremlinNob",
      "name": "Soul of Gremlin Noob",
      "atlas": "images/monsters/theBottom/nobGremlin/skeleton.atlas",
      "json": "images/monsters/theBottom/nobGremlin/skeleton.json"
    },
    {
      "id": "GremlinThief",
      "name": "Soul of Sneaky Grimlin",
      "atlas": "images/monsters/theBottom/thiefGremlin/skeleton.atlas",
      "json": "images/monsters/theBottom/thiefGremlin/skeleton.json"
    },
    {
      "id": "GremlinTsundere",
      "name": "Soul of Shield Gremlin",
      "atlas": "images/monsters/theBottom/femaleGremlin/skeleton.atlas",
      "json": "images/monsters/theBottom/femaleGremlin/skeleton.json"
    },
    {
      "id": "GremlinWarrior",
      "name": "Soul of Happy Gremlin",
      "atlas": "images/monsters/theBottom/angryGremlin/skeleton.atlas",
      "json": "images/monsters/theBottom/angryGremlin/skeleton.json"
    },
    {
      "id": "GremlinWizard",
      "name": "Soul of Gremlin Wizard",
      "atlas": "images/monsters/theBottom/wizardGremlin/skeleton.atlas",
      "json": "images/monsters/theBottom/wizardGremlin/skeleton.json"
    },
    {
      "id": "Healer",
      "name": "Soul of Mystic",
      "atlas": "images/monsters/theCity/healer/skeleton.atlas",
      "json": "images/monsters/theCity/healer/skeleton.json"
    },
    {
      "id": "JawWorm",
      "name": "Soul of Jaw Worm",
      "atlas": "images/monsters/theBottom/jawWorm/skeleton.atlas",
      "json": "images/monsters/theBottom/jawWorm/skeleton.json",
      "moves": [
        {"type": "CUSTOM", "amount": 1, "id": "bAndD"}
      ]
    },
    {
      "id": "Lagavulin",
      "name": "Soul of Lagavulin",
      "atlas": "images/monsters/theBottom/lagavulin/skeleton.atlas",
      "json": "images/monsters/theBottom/lagavulin/skeleton.json"
    },
    {
      "id": "Looter",
      "name": "Soul of Looter",
      "atlas": "images/monsters/theBottom/looter/skeleton.atlas",
      "json": "images/monsters/theBottom/looter/skeleton.json"
    },
    {
      "id": "Maw",
      "name": "Soul of The Maw",
      "atlas": "images/monsters/theForest/maw/skeleton.atlas",
      "json": "images/monsters/theForest/maw/skeleton.json"
    },
    {
      "id": "Mugger",
      "name": "Soul of Mugger",
      "atlas": "images/monsters/theCity/looterAlt/skeleton.atlas",
      "json": "images/monsters/theCity/looterAlt/skeleton.json"
    },
    {
      "id": "Nemesis",
      "name": "Soul of Nemesis",
      "atlas": "images/monsters/theForest/nemesis/skeleton.atlas",
      "json": "images/monsters/theForest/nemesis/skeleton.json"
    },
    {
      "id": "Orb Walker",
      "name": "Soul of Orb Walker",
      "atlas": "images/monsters/theForest/orbWalker/skeleton.atlas",
      "json": "images/monsters/theForest/orbWalker/skeleton.json"
    },
    {
      "id": "Puppeteer",
      "name": "Soul of Puppeteer",
      "atlas": "",
      "json": ""
    },
    {
      "id": "Repulsor",
      "name": "Soul of Repulsor",
      "atlas": "images/monsters/theForest/repulser/skeleton.atlas",
      "json": "images/monsters/theForest/repulser/skeleton.json"
    },
    {
      "id": "Sentry",
      "name": "Soul of Sentry",
      "atlas": "images/monsters/theBottom/sentry/skeleton.atlas",
      "json": "images/monsters/theBottom/sentry/skeleton.json"
    },
    {
      "id": "Serpent",
      "name": "Soul of Spire Growth",
      "atlas": "images/monsters/theForest/spireGrowth/skeleton.atlas",
      "json": "images/monsters/theForest/spireGrowth/skeleton.json"
    },
    {
      "id": "Shelled Parasite",
      "name": "Soul of Shelled Parasite",
      "atlas": "images/monsters/theCity/shellMonster/skeleton.atlas",
      "json": "images/monsters/theCity/shellMonster/skeleton.json"
    },
    {
      "id": "SlaverBlue",
      "name": "Soul of Slaver",
      "atlas": "images/monsters/theBottom/blueSlaver/skeleton.atlas",
      "json": "images/monsters/theBottom/blueSlaver/skeleton.json"
    },
    {
      "id": "SlaverBoss",
      "name": "Soul of Taskmaster",
      "atlas": "",
      "json": ""
    },
    {
      "id": "SlaverRed",
      "name": "Soul of Slaver",
      "atlas": "images/monsters/theBottom/redSlaver/skeleton.atlas",
      "json": "images/monsters/theBottom/redSlaver/skeleton.json"
    },
    {
      "id": "SlimeBoss",
      "name": "Soul of SlimeBoss",
      "atlas": "images/monsters/theCity/slaverMaster/skeleton.atlas",
      "json": "images/monsters/theCity/slaverMaster/skeleton.json"
    },
    {
      "id": "SnakePlant",
      "name": "Soul of Snake Plant",
      "atlas": "images/monsters/theCity/snakePlant/skeleton.atlas",
      "json": "images/monsters/theCity/snakePlant/skeleton.json"
    },
    {
      "id": "Snecko",
      "name": "Soul of Snecko",
      "atlas": "images/monsters/theCity/reptile/skeleton.atlas",
      "json": "images/monsters/theCity/reptile/skeleton.json"
    },
    {
      "id": "SphericGuardian",
      "name": "Soul of Spheric Guardian",
      "atlas": "images/monsters/theCity/sphere/skeleton.atlas",
      "json": "images/monsters/theCity/sphere/skeleton.json"
    },
    {
      "id": "SpikeSlime_L",
      "name": "Soul of Spike Slime (L)",
      "atlas": "images/monsters/theBottom/slimeAltL/skeleton.atlas",
      "json": "images/monsters/theBottom/slimeAltL/skeleton.json"
    },
    {
      "id": "SpikeSlime_M",
      "name": "Soul of Spike Slime (M)",
      "atlas": "images/monsters/theBottom/slimeAltM/skeleton.atlas",
      "json": "images/monsters/theBottom/slimeAltM/skeleton.json"
    },
    {
      "id": "SpikeSlime_S",
      "name": "Soul of Spike Slime (S)",
      "atlas": "images/monsters/theBottom/slimeAltS/skeleton.atlas",
      "json": "images/monsters/theBottom/slimeAltS/skeleton.json"
    },
    {
      "id": "Spiker",
      "name": "Soul of Spiker",
      "atlas": "images/monsters/theForest/spiker/skeleton.atlas",
      "json": "images/monsters/theForest/spiker/skeleton.json"
    },
    {
      "id": "TheCollector",
      "name": "Soul of The Collector",
      "atlas": "images/monsters/theCity/collector/skeleton.atlas",
      "json": "images/monsters/theCity/collector/skeleton.json"
    },
    {
      "id": "TheGuardian",
      "name": "Soul of The Guardian",
      "atlas": "images/monsters/theBottom/boss/guardian/skeleton.atlas",
      "json": "images/monsters/theBottom/boss/guardian/skeleton.json"
    },
    {
      "id": "TimeEater",
      "name": "Soul of TimeEater",
      "atlas": "images/monsters/theForest/timeEater/skeleton.atlas",
      "json": "images/monsters/theForest/timeEater/skeleton.json"
    },
    {
      "id": "TorchHead",
      "name": "Soul of Torch Head",
      "atlas": "images/monsters/theCity/torchHead/skeleton.atlas",
      "json": "images/monsters/theCity/torchHead/skeleton.json"
    },
    {
      "id": "Transient",
      "name": "Soul of Transient",
      "atlas": "images/monsters/theForest/transient/skeleton.atlas",
      "json": "images/monsters/theForest/transient/skeleton.json"
    },
    {
      "id": "SpireShield",
      "name": "Soul of Spire Shield",
      "atlas": "images/monsters/theEnding/shield/skeleton.atlas",
      "json": "images/monsters/theEnding/shield/skeleton.json"
    },
    {
      "id": "SpireSpear",
      "name": "Soul of Spire Spear",
      "atlas": "images/monsters/theEnding/spear/skeleton.atlas",
      "json": "images/monsters/theEnding/spear/skeleton.json"
    },
    {
      "id": "WrithingMass",
      "name": "Soul of Writhing Mass",
      "atlas": "images/monsters/theForest/spaghetti/skeleton.atlas",
      "json": "images/monsters/theForest/spaghetti/skeleton.json"
    }
  ]
}
------- Souls Found: 67-------
Soul(monsterId=AcidSlime_L, monsterName=Soul of Acid Slime (L), monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/slimeL/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/slimeL/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=AcidSlime_M, monsterName=Soul of Acid Slime (M), monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/slimeM/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/slimeM/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=AcidSlime_S, monsterName=Soul of Acid Slime (S), monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/slimeS/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/slimeS/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Apology Slime, monsterName=Soul of Apology Slime, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/slimeS/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/slimeS/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=AwakenedOne, monsterName=Soul of Awakened One, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/awakenedOne/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/awakenedOne/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=BanditBear, monsterName=Soul of Bear, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/bear/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/bear/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=BanditChild, monsterName=Soul of Pointy, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/pointy/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/pointy/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=BanditLeader, monsterName=Soul of Romeo, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/romeo/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/romeo/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=BookOfStabbing, monsterName=Soul of Book of Stabbing, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/stabBook/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/stabBook/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=BronzeAutomaton, monsterName=Soul of Bronze Automaton, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/automaton/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/automaton/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=BronzeOrb, monsterName=Soul of Orb, monsterImage=null, monsterAtlasUrl=, monsterSkeletonJson=, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Byrd, monsterName=Soul of Byrd, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/byrd/flying.atlas, monsterSkeletonJson=images/monsters/theCity/byrd/flying.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Centurion, monsterName=Soul of Centurion, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/tank/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/tank/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Champ, monsterName=Soul of The Chump, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/champ/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/champ/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Chosen, monsterName=Soul of Chosen, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/chosen/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/chosen/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Cultist, monsterName=Soul of Cultist, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/cultist/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/cultist/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Darkling, monsterName=Soul of Darkling, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/darkling/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/darkling/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Deca, monsterName=Soul of Deca, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/deca/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/deca/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Donu, monsterName=Soul of Donu, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/donu/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/donu/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Exploder, monsterName=Soul of Exploder, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/exploder/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/exploder/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=FireOrb, monsterName=Soul of Fire Orb, monsterImage=null, monsterAtlasUrl=, monsterSkeletonJson=, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Dagger, monsterName=Soul of Dagger, monsterImage=null, monsterAtlasUrl=, monsterSkeletonJson=, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=FlameBruiser, monsterName=Soul of Flame Bruiser, monsterImage=null, monsterAtlasUrl=, monsterSkeletonJson=, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Reptomancer, monsterName=Soul of Reptomancer, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/mage/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/mage/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=FungiBeast, monsterName=Soul of Beast Fun Guy, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/fungi/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/fungi/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=FuzzyLouseDefensive, monsterName=Soul of Louse, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/louseGreen/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/louseGreen/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=FuzzyLouseNormal, monsterName=Soul of Louse, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/louseRed/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/louseRed/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=GiantHead, monsterName=Soul of Giant Head, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/head/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/head/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=GremlinFat, monsterName=Soul of Fat Gremlin, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/fatGremlin/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/fatGremlin/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=GremlinLeader, monsterName=Soul of Gremlin Leader, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/gremlinleader/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/gremlinleader/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=GremlinNob, monsterName=Soul of Gremlin Noob, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/nobGremlin/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/nobGremlin/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=GremlinThief, monsterName=Soul of Sneaky Grimlin, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/thiefGremlin/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/thiefGremlin/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=GremlinTsundere, monsterName=Soul of Shield Gremlin, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/femaleGremlin/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/femaleGremlin/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=GremlinWarrior, monsterName=Soul of Happy Gremlin, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/angryGremlin/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/angryGremlin/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=GremlinWizard, monsterName=Soul of Gremlin Wizard, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/wizardGremlin/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/wizardGremlin/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Healer, monsterName=Soul of Mystic, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/healer/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/healer/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=JawWorm, monsterName=Soul of Jaw Worm, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/jawWorm/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/jawWorm/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=[SoulMove(type=CUSTOM, amount=1, id=bAndD)])
Soul(monsterId=Lagavulin, monsterName=Soul of Lagavulin, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/lagavulin/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/lagavulin/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Looter, monsterName=Soul of Looter, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/looter/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/looter/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Maw, monsterName=Soul of The Maw, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/maw/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/maw/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Mugger, monsterName=Soul of Mugger, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/looterAlt/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/looterAlt/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Nemesis, monsterName=Soul of Nemesis, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/nemesis/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/nemesis/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Orb Walker, monsterName=Soul of Orb Walker, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/orbWalker/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/orbWalker/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Puppeteer, monsterName=Soul of Puppeteer, monsterImage=null, monsterAtlasUrl=, monsterSkeletonJson=, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Repulsor, monsterName=Soul of Repulsor, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/repulser/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/repulser/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Sentry, monsterName=Soul of Sentry, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/sentry/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/sentry/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Serpent, monsterName=Soul of Spire Growth, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/spireGrowth/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/spireGrowth/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Shelled Parasite, monsterName=Soul of Shelled Parasite, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/shellMonster/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/shellMonster/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=SlaverBlue, monsterName=Soul of Slaver, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/blueSlaver/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/blueSlaver/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=SlaverBoss, monsterName=Soul of Taskmaster, monsterImage=null, monsterAtlasUrl=, monsterSkeletonJson=, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=SlaverRed, monsterName=Soul of Slaver, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/redSlaver/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/redSlaver/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=SlimeBoss, monsterName=Soul of SlimeBoss, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/slaverMaster/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/slaverMaster/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=SnakePlant, monsterName=Soul of Snake Plant, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/snakePlant/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/snakePlant/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Snecko, monsterName=Soul of Snecko, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/reptile/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/reptile/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=SphericGuardian, monsterName=Soul of Spheric Guardian, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/sphere/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/sphere/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=SpikeSlime_L, monsterName=Soul of Spike Slime (L), monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/slimeAltL/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/slimeAltL/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=SpikeSlime_M, monsterName=Soul of Spike Slime (M), monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/slimeAltM/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/slimeAltM/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=SpikeSlime_S, monsterName=Soul of Spike Slime (S), monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/slimeAltS/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/slimeAltS/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Spiker, monsterName=Soul of Spiker, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/spiker/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/spiker/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=TheCollector, monsterName=Soul of The Collector, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/collector/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/collector/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=TheGuardian, monsterName=Soul of The Guardian, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/boss/guardian/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/boss/guardian/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=TimeEater, monsterName=Soul of TimeEater, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/timeEater/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/timeEater/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=TorchHead, monsterName=Soul of Torch Head, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/torchHead/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/torchHead/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Transient, monsterName=Soul of Transient, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/transient/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/transient/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=SpireShield, monsterName=Soul of Spire Shield, monsterImage=null, monsterAtlasUrl=images/monsters/theEnding/shield/skeleton.atlas, monsterSkeletonJson=images/monsters/theEnding/shield/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=SpireSpear, monsterName=Soul of Spire Spear, monsterImage=null, monsterAtlasUrl=images/monsters/theEnding/spear/skeleton.atlas, monsterSkeletonJson=images/monsters/theEnding/spear/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=WrithingMass, monsterName=Soul of Writhing Mass, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/spaghetti/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/spaghetti/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
------- Added Souls --------
Soul(monsterId=AcidSlime_L, monsterName=Soul of Acid Slime (L), monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/slimeL/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/slimeL/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=AcidSlime_M, monsterName=Soul of Acid Slime (M), monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/slimeM/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/slimeM/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=AcidSlime_S, monsterName=Soul of Acid Slime (S), monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/slimeS/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/slimeS/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Apology Slime, monsterName=Soul of Apology Slime, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/slimeS/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/slimeS/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=AwakenedOne, monsterName=Soul of Awakened One, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/awakenedOne/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/awakenedOne/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=BanditBear, monsterName=Soul of Bear, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/bear/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/bear/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=BanditChild, monsterName=Soul of Pointy, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/pointy/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/pointy/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=BanditLeader, monsterName=Soul of Romeo, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/romeo/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/romeo/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=BookOfStabbing, monsterName=Soul of Book of Stabbing, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/stabBook/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/stabBook/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=BronzeAutomaton, monsterName=Soul of Bronze Automaton, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/automaton/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/automaton/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=BronzeOrb, monsterName=Soul of Orb, monsterImage=null, monsterAtlasUrl=, monsterSkeletonJson=, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Byrd, monsterName=Soul of Byrd, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/byrd/flying.atlas, monsterSkeletonJson=images/monsters/theCity/byrd/flying.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Centurion, monsterName=Soul of Centurion, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/tank/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/tank/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Champ, monsterName=Soul of The Chump, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/champ/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/champ/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Chosen, monsterName=Soul of Chosen, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/chosen/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/chosen/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Cultist, monsterName=Soul of Cultist, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/cultist/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/cultist/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Darkling, monsterName=Soul of Darkling, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/darkling/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/darkling/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Deca, monsterName=Soul of Deca, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/deca/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/deca/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Donu, monsterName=Soul of Donu, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/donu/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/donu/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Exploder, monsterName=Soul of Exploder, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/exploder/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/exploder/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
22:41:12.387 INFO steam.SSCallback> 1Bloop: 646570
Soul(monsterId=FireOrb, monsterName=Soul of Fire Orb, monsterImage=null, monsterAtlasUrl=, monsterSkeletonJson=, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Dagger, monsterName=Soul of Dagger, monsterImage=null, monsterAtlasUrl=, monsterSkeletonJson=, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=FlameBruiser, monsterName=Soul of Flame Bruiser, monsterImage=null, monsterAtlasUrl=, monsterSkeletonJson=, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Reptomancer, monsterName=Soul of Reptomancer, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/mage/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/mage/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=FungiBeast, monsterName=Soul of Beast Fun Guy, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/fungi/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/fungi/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=FuzzyLouseDefensive, monsterName=Soul of Louse, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/louseGreen/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/louseGreen/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=FuzzyLouseNormal, monsterName=Soul of Louse, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/louseRed/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/louseRed/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=GiantHead, monsterName=Soul of Giant Head, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/head/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/head/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=GremlinFat, monsterName=Soul of Fat Gremlin, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/fatGremlin/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/fatGremlin/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=GremlinLeader, monsterName=Soul of Gremlin Leader, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/gremlinleader/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/gremlinleader/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=GremlinNob, monsterName=Soul of Gremlin Noob, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/nobGremlin/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/nobGremlin/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=GremlinThief, monsterName=Soul of Sneaky Grimlin, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/thiefGremlin/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/thiefGremlin/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=GremlinTsundere, monsterName=Soul of Shield Gremlin, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/femaleGremlin/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/femaleGremlin/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=GremlinWarrior, monsterName=Soul of Happy Gremlin, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/angryGremlin/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/angryGremlin/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=GremlinWizard, monsterName=Soul of Gremlin Wizard, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/wizardGremlin/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/wizardGremlin/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Healer, monsterName=Soul of Mystic, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/healer/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/healer/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=JawWorm, monsterName=Soul of Jaw Worm, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/jawWorm/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/jawWorm/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=[SoulMove(type=CUSTOM, amount=1, id=bAndD)])
Soul(monsterId=Lagavulin, monsterName=Soul of Lagavulin, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/lagavulin/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/lagavulin/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Looter, monsterName=Soul of Looter, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/looter/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/looter/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Maw, monsterName=Soul of The Maw, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/maw/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/maw/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Mugger, monsterName=Soul of Mugger, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/looterAlt/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/looterAlt/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Nemesis, monsterName=Soul of Nemesis, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/nemesis/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/nemesis/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Orb Walker, monsterName=Soul of Orb Walker, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/orbWalker/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/orbWalker/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Puppeteer, monsterName=Soul of Puppeteer, monsterImage=null, monsterAtlasUrl=, monsterSkeletonJson=, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Repulsor, monsterName=Soul of Repulsor, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/repulser/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/repulser/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Sentry, monsterName=Soul of Sentry, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/sentry/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/sentry/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Serpent, monsterName=Soul of Spire Growth, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/spireGrowth/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/spireGrowth/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Shelled Parasite, monsterName=Soul of Shelled Parasite, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/shellMonster/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/shellMonster/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=SlaverBlue, monsterName=Soul of Slaver, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/blueSlaver/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/blueSlaver/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=SlaverBoss, monsterName=Soul of Taskmaster, monsterImage=null, monsterAtlasUrl=, monsterSkeletonJson=, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=SlaverRed, monsterName=Soul of Slaver, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/redSlaver/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/redSlaver/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=SlimeBoss, monsterName=Soul of SlimeBoss, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/slaverMaster/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/slaverMaster/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=SnakePlant, monsterName=Soul of Snake Plant, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/snakePlant/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/snakePlant/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Snecko, monsterName=Soul of Snecko, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/reptile/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/reptile/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=SphericGuardian, monsterName=Soul of Spheric Guardian, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/sphere/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/sphere/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=SpikeSlime_L, monsterName=Soul of Spike Slime (L), monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/slimeAltL/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/slimeAltL/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=SpikeSlime_M, monsterName=Soul of Spike Slime (M), monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/slimeAltM/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/slimeAltM/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=SpikeSlime_S, monsterName=Soul of Spike Slime (S), monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/slimeAltS/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/slimeAltS/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Spiker, monsterName=Soul of Spiker, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/spiker/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/spiker/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=TheCollector, monsterName=Soul of The Collector, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/collector/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/collector/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=TheGuardian, monsterName=Soul of The Guardian, monsterImage=null, monsterAtlasUrl=images/monsters/theBottom/boss/guardian/skeleton.atlas, monsterSkeletonJson=images/monsters/theBottom/boss/guardian/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=TimeEater, monsterName=Soul of TimeEater, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/timeEater/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/timeEater/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=TorchHead, monsterName=Soul of Torch Head, monsterImage=null, monsterAtlasUrl=images/monsters/theCity/torchHead/skeleton.atlas, monsterSkeletonJson=images/monsters/theCity/torchHead/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=Transient, monsterName=Soul of Transient, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/transient/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/transient/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=SpireShield, monsterName=Soul of Spire Shield, monsterImage=null, monsterAtlasUrl=images/monsters/theEnding/shield/skeleton.atlas, monsterSkeletonJson=images/monsters/theEnding/shield/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=SpireSpear, monsterName=Soul of Spire Spear, monsterImage=null, monsterAtlasUrl=images/monsters/theEnding/spear/skeleton.atlas, monsterSkeletonJson=images/monsters/theEnding/spear/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
Soul(monsterId=WrithingMass, monsterName=Soul of Writhing Mass, monsterImage=null, monsterAtlasUrl=images/monsters/theForest/spaghetti/skeleton.atlas, monsterSkeletonJson=images/monsters/theForest/spaghetti/skeleton.json, monsterType=null, width=0.0, height=0.0, soulMoveInfo=null)
22:41:12.392 INFO basemod.BaseMod> loadJsonStrings: com.megacrit.cardcrawl.localization.CardStrings
22:41:12.424 INFO audio.MusicMaster> Music Volume: 0.5
22:41:12.433 INFO audio.SoundMaster> Sound Effect Volume: 0.5
22:41:12.434 INFO audio.SoundMaster> Loaded 368 Sound Effects
22:41:12.434 INFO audio.SoundMaster> SFX load time: 8ms
22:41:12.435 INFO basemod.BaseMod> begin adding custom sounds
22:41:12.435 INFO basemod.BaseMod> Added 0 sounds
22:41:13.592 INFO cards.AbstractCard> Card Image load time: 1147ms
22:41:13.594 INFO basemod.BaseMod> editting keywords
22:41:14.488 INFO helpers.ImageMaster> Texture load time: 887ms
22:41:14.834 INFO helpers.FontHelper> Font load time: 268ms
22:41:14.843 INFO unlock.UnlockTracker> RED UNLOCKS:   9/9
22:41:14.843 INFO unlock.UnlockTracker> GREEN UNLOCKS: 9/9
22:41:14.844 INFO unlock.UnlockTracker> BLUE UNLOCKS: 3/9
22:41:14.844 INFO unlock.UnlockTracker> PURPLE UNLOCKS: 0/9
22:41:14.844 INFO unlock.UnlockTracker> RELIC UNLOCKS: 12/24
22:41:14.892 INFO unlock.UnlockTracker> CARDS SEEN:    848/0
22:41:14.913 INFO unlock.UnlockTracker> RELICS SEEN:   156/0
22:41:14.914 INFO basemod.BaseMod> publish post refresh - refreshing unlocks
22:41:14.914 INFO basemod.BaseMod> begin editing cards
Soul Eater: Creating Card Images
22:41:15.182 INFO panels.TopPanel> Twitch Integration enabled due to presence of 'twitch.properties` file.
22:41:15.183 INFO panels.TopPanel> Not starting twitch integration because enabled=false
22:41:16.095 INFO helpers.CardLibrary> Card load time: 1164ms with 372 cards
22:41:16.095 INFO basemod.BaseMod> begin editing relics
22:41:16.254 INFO helpers.RelicLibrary> Relic load time: 159ms
22:41:16.255 INFO input.InputHelper> Setting input processor to Scroller
22:41:16.270 INFO unlock.UnlockTracker> Blue Candle should be unlocked.
22:41:16.270 INFO unlock.UnlockTracker> Dead Branch should be unlocked.
22:41:16.270 INFO unlock.UnlockTracker> Singing Bowl should be unlocked.
22:41:16.271 INFO unlock.UnlockTracker> Havoc should be unlocked.
22:41:16.271 INFO unlock.UnlockTracker> Sentinel should be unlocked.
22:41:16.272 INFO unlock.UnlockTracker> Exhume should be unlocked.
22:41:16.272 INFO unlock.UnlockTracker> Wild Strike should be unlocked.
22:41:16.272 INFO unlock.UnlockTracker> Evolve should be unlocked.
22:41:16.272 INFO unlock.UnlockTracker> Immolate should be unlocked.
22:41:16.273 INFO unlock.UnlockTracker> Omamori should be unlocked.
22:41:16.273 INFO unlock.UnlockTracker> Prayer Wheel should be unlocked.
22:41:16.273 INFO unlock.UnlockTracker> Shovel should be unlocked.
22:41:16.274 INFO unlock.UnlockTracker> Heavy Blade should be unlocked.
22:41:16.274 INFO unlock.UnlockTracker> Spot Weakness should be unlocked.
22:41:16.274 INFO unlock.UnlockTracker> Limit Break should be unlocked.
22:41:16.274 INFO unlock.UnlockTracker> Concentrate should be unlocked.
22:41:16.274 INFO unlock.UnlockTracker> Setup should be unlocked.
22:41:16.274 INFO unlock.UnlockTracker> Grand Finale should be unlocked.
22:41:16.275 INFO unlock.UnlockTracker> Art of War should be unlocked.
22:41:16.275 INFO unlock.UnlockTracker> The Courier should be unlocked.
22:41:16.275 INFO unlock.UnlockTracker> Pandora's Box should be unlocked.
22:41:16.276 INFO unlock.UnlockTracker> Cloak And Dagger should be unlocked.
22:41:16.276 INFO unlock.UnlockTracker> Accuracy should be unlocked.
22:41:16.276 INFO unlock.UnlockTracker> Storm of Steel should be unlocked.
22:41:16.277 INFO unlock.UnlockTracker> Du-Vu Doll should be unlocked.
22:41:16.277 INFO unlock.UnlockTracker> Smiling Mask should be unlocked.
22:41:16.277 INFO unlock.UnlockTracker> Tiny Chest should be unlocked.
22:41:16.277 INFO unlock.UnlockTracker> Bane should be unlocked.
22:41:16.278 INFO unlock.UnlockTracker> Catalyst should be unlocked.
22:41:16.278 INFO unlock.UnlockTracker> Corpse Explosion should be unlocked.
22:41:16.285 INFO basemod.BaseMod> postCreateStartingRelics for: IRONCLAD
22:41:16.286 INFO basemod.BaseMod> postCreateStartingRelics adding [ Burning Blood ]
22:41:16.378 INFO basemod.BaseMod> postCreateStartingRelics for: THE_SILENT
22:41:16.378 INFO basemod.BaseMod> postCreateStartingRelics adding [ Ring of the Snake ]
22:41:16.415 INFO basemod.BaseMod> postCreateStartingRelics for: DEFECT
22:41:16.416 INFO basemod.BaseMod> postCreateStartingRelics adding [ Cracked Core ]
22:41:16.454 INFO basemod.BaseMod> postCreateStartingRelics for: WATCHER
22:41:16.454 INFO basemod.BaseMod> postCreateStartingRelics adding [ PureWater ]
22:41:16.495 INFO basemod.BaseMod> begin editing characters
22:41:16.501 INFO basemod.BaseMod> publishPostInitialize
22:41:16.531 INFO basemod.BaseMod> registerModBadge : BaseMod
22:41:16.531 INFO basemod.ModBadge> initialized mod badge for: BaseMod
22:41:16.532 INFO basemod.ModBadge> setup hooks for BaseMod mod badge
22:41:16.533 INFO basemod.BaseMod> initializeUnderscoreCardIDs
22:41:16.534 INFO basemod.BaseMod> initializeUnderscorePotionIDs
22:41:16.534 INFO basemod.BaseMod> initializeUnderscoreEventIDs
22:41:16.534 INFO basemod.BaseMod> initializeUnderscoreRelicIDs
22:41:16.534 INFO basemod.BaseMod> initializeEncounters
22:41:16.560 INFO controller.CInputHelper> [CONTROLLER] Utilizing DirectInput
Controllers: added manager for application, 1 managers active
22:41:16.623 INFO controller.CInputHelper> [CONTROLLER] No controllers detected
22:41:18.517 INFO stats.StatsScreen> Loading character stats.
22:41:18.529 INFO steam.SteamIntegration> unlockAchievement: SHRUG_IT_OFF
22:41:18.529 INFO steam.SteamIntegration> unlockAchievement: COME_AT_ME
22:41:18.530 INFO steam.SteamIntegration> unlockAchievement: THE_PACT
22:41:18.530 INFO steam.SteamIntegration> unlockAchievement: ADRENALINE
22:41:18.531 INFO steam.SteamIntegration> unlockAchievement: JAXXED
22:41:18.531 INFO steam.SteamIntegration> unlockAchievement: IMPERVIOUS
22:41:18.531 INFO steam.SteamIntegration> unlockAchievement: BARRICADED
22:41:18.531 INFO steam.SteamIntegration> unlockAchievement: CATALYST
22:41:18.532 INFO steam.SteamIntegration> unlockAchievement: PLAGUE
22:41:18.532 INFO steam.SteamIntegration> unlockAchievement: INFINITY
22:41:18.533 INFO steam.SteamIntegration> unlockAchievement: PERFECT
22:41:18.533 INFO steam.SteamIntegration> unlockAchievement: ASCEND_0
22:41:18.533 INFO steam.SteamIntegration> unlockAchievement: TRANSIENT
22:41:18.534 INFO steam.SteamIntegration> unlockAchievement: GUARDIAN
22:41:18.534 INFO steam.SteamIntegration> unlockAchievement: GHOST_GUARDIAN
22:41:18.534 INFO steam.SteamIntegration> unlockAchievement: SLIME_BOSS
22:41:18.535 INFO steam.SteamIntegration> unlockAchievement: AUTOMATON
22:41:18.535 INFO steam.SteamIntegration> unlockAchievement: COLLECTOR
22:41:18.535 INFO steam.SteamIntegration> unlockAchievement: CHAMP
22:41:18.535 INFO steam.SteamIntegration> unlockAchievement: CROW
22:41:18.536 INFO steam.SteamIntegration> unlockAchievement: SHAPES
22:41:18.536 INFO steam.SteamIntegration> unlockAchievement: TIME_EATER
22:41:18.537 INFO steam.SteamIntegration> unlockAchievement: RUBY
22:41:18.537 INFO steam.SteamIntegration> unlockAchievement: EMERALD
22:41:18.579 INFO steam.SSCallback> Stat Stored
22:41:18.579 INFO steam.SSCallback> Stat Stored
22:41:18.579 INFO steam.SSCallback> Stat Stored
22:41:18.580 INFO steam.SSCallback> Stat Stored
22:41:18.580 INFO steam.SSCallback> Stat Stored
22:41:18.580 INFO steam.SSCallback> Stat Stored
22:41:18.580 INFO steam.SSCallback> Stat Stored
22:41:18.580 INFO steam.SSCallback> Stat Stored
22:41:18.580 INFO steam.SSCallback> Stat Stored
22:41:18.580 INFO steam.SSCallback> Stat Stored
22:41:18.580 INFO steam.SSCallback> Stat Stored
22:41:18.581 INFO steam.SSCallback> Stat Stored
22:41:18.581 INFO steam.SSCallback> Stat Stored
22:41:18.581 INFO steam.SSCallback> Stat Stored
22:41:18.581 INFO steam.SSCallback> Stat Stored
22:41:18.581 INFO steam.SSCallback> Stat Stored
22:41:18.581 INFO steam.SSCallback> Stat Stored
22:41:18.581 INFO steam.SSCallback> Stat Stored
22:41:18.581 INFO steam.SSCallback> Stat Stored
22:41:18.581 INFO steam.SSCallback> Stat Stored
22:41:18.581 INFO steam.SSCallback> Stat Stored
22:41:18.581 INFO steam.SSCallback> Stat Stored
22:41:18.581 INFO steam.SSCallback> Stat Stored
22:41:18.581 INFO steam.SSCallback> Stat Stored
22:41:18.602 INFO basemod.BaseMod> publishAddCustomModeMods
22:41:18.707 INFO unlock.UnlockTracker> RED UNLOCKS:   9/9
22:41:18.707 INFO unlock.UnlockTracker> GREEN UNLOCKS: 9/9
22:41:18.708 INFO unlock.UnlockTracker> BLUE UNLOCKS: 3/9
22:41:18.708 INFO unlock.UnlockTracker> PURPLE UNLOCKS: 0/9
22:41:18.708 INFO unlock.UnlockTracker> RELIC UNLOCKS: 12/24
22:41:18.708 INFO unlock.UnlockTracker> CARDS SEEN:    848/373
22:41:18.708 INFO unlock.UnlockTracker> RELICS SEEN:   156/178
22:41:18.708 INFO UnlockTracker.CountModdedUnlockCards> Counting modded unlocks.
22:41:18.708 INFO basemod.BaseMod> publish post refresh - refreshing unlocks
22:41:18.708 INFO UnlockTracker.CountModdedUnlockCards> Counting modded unlocks.
22:41:18.708 INFO compendium.CardLibraryScreen> Initializing card library screen.
22:41:18.712 INFO basemod.BaseMod> postCreateStartingRelics for: IRONCLAD
22:41:18.712 INFO basemod.BaseMod> postCreateStartingRelics adding [ Burning Blood ]
22:41:18.751 INFO characters.CharacterManager> Successfully recreated IRONCLAD
22:41:18.752 INFO basemod.BaseMod> postCreateStartingRelics for: THE_SILENT
22:41:18.752 INFO basemod.BaseMod> postCreateStartingRelics adding [ Ring of the Snake ]
22:41:18.785 INFO characters.CharacterManager> Successfully recreated THE_SILENT
22:41:18.785 INFO basemod.BaseMod> postCreateStartingRelics for: DEFECT
22:41:18.786 INFO basemod.BaseMod> postCreateStartingRelics adding [ Cracked Core ]
22:41:18.819 INFO characters.CharacterManager> Successfully recreated DEFECT
22:41:18.820 INFO basemod.BaseMod> postCreateStartingRelics for: WATCHER
22:41:18.820 INFO basemod.BaseMod> postCreateStartingRelics adding [ PureWater ]
22:41:18.859 INFO characters.CharacterManager> Successfully recreated WATCHER
22:41:18.872 INFO saveAndContinue.SaveAndContinue> saves\IRONCLAD.autosave was corrupt, loading backup...
22:41:18.876 INFO saveAndContinue.SaveAndContinue> DELETING saves\IRONCLAD.autosave SAVE
22:41:18.877 INFO saveAndContinue.SaveAndContinue> IRONCLAD save INVALID!
22:41:18.877 INFO saveAndContinue.SaveAndContinue> THE_SILENT save does NOT exist!
22:41:18.877 INFO saveAndContinue.SaveAndContinue> DEFECT save does NOT exist!
22:41:18.878 INFO saveAndContinue.SaveAndContinue> WATCHER save does NOT exist!
22:41:23.864 INFO dungeons.AbstractDungeon> Generating seeds: 209772289776443
22:41:24.860 INFO core.CardCrawlGame> FINAL ACT AVAILABLE: false
22:41:24.861 INFO basemod.BaseMod> publishPreStartGame
22:41:24.862 INFO basemod.BaseMod> postCreateStartingRelics for: IRONCLAD
22:41:24.862 INFO basemod.BaseMod> postCreateStartingRelics adding [ Burning Blood ]
22:41:24.932 INFO characters.CharacterManager> Successfully recreated IRONCLAD
22:41:24.951 INFO dungeons.AbstractDungeon> CardRng Counter: 0
22:41:24.967 INFO dungeons.AbstractDungeon> [BOSS] Slime Boss
22:41:24.976 INFO EventUtil> Adding normal events and shrines on Dungeon Instantiation
22:41:24.976 INFO EventUtil> Checking for replacement normal events and shrines...
22:41:24.977 INFO dungeons.AbstractDungeon> INIT CARD POOL
22:41:24.977 INFO helpers.CardLibrary> [INFO] Adding red cards into card pool.
22:41:24.979 INFO dungeons.AbstractDungeon> COLORLESS CARDS: 36
22:41:24.980 INFO dungeons.AbstractDungeon> CURSE CARDS: 10
22:41:24.980 INFO dungeons.AbstractDungeon> Cardpool load time: 3ms
22:41:24.980 INFO unlock.UnlockTracker> Already seen: Strike_R
22:41:24.981 INFO unlock.UnlockTracker> Already seen: Strike_R
22:41:24.981 INFO unlock.UnlockTracker> Already seen: Strike_R
22:41:24.981 INFO unlock.UnlockTracker> Already seen: Strike_R
22:41:24.981 INFO unlock.UnlockTracker> Already seen: Strike_R
22:41:24.981 INFO unlock.UnlockTracker> Already seen: Defend_R
22:41:24.981 INFO unlock.UnlockTracker> Already seen: Defend_R
22:41:24.981 INFO unlock.UnlockTracker> Already seen: Defend_R
22:41:24.981 INFO unlock.UnlockTracker> Already seen: Defend_R
22:41:24.981 INFO unlock.UnlockTracker> Already seen: Bash
22:41:24.981 INFO basemod.BaseMod> postCreateStartingDeck for: IRONCLAD
22:41:24.981 INFO basemod.BaseMod> postCreateStartingDeck adding [ Strike_R Strike_R Strike_R Strike_R Strike_R Defend_R Defend_R Defend_R Defend_R Bash ]
22:41:24.993 INFO dungeons.AbstractDungeon> Content generation time: 50ms
22:41:24.993 INFO basemod.BaseMod> publishStartGame
22:41:24.994 INFO basemod.BaseMod> mapDensityMultiplier: 1.0
22:41:24.995 INFO basemod.BaseMod> publishStartAct
22:41:24.996 INFO basemod.BaseMod> publishPostDungeonInitialize
22:41:25.355 INFO scenes.AbstractScene> Fading in ambiance: AMBIANCE_BOTTOM
22:41:25.553 INFO dungeons.AbstractDungeon> Note For Yourself is enabled due to No Ascension
22:41:25.554 INFO EventUtil> Adding conditional SpecialOneTimeEvents.
22:41:25.555 INFO EventUtil> Checking for SpecialOneTimeEvent replacements...
22:41:25.574 INFO dungeons.AbstractDungeon> Generating Room Types! There are 52 rooms:
22:41:25.575 INFO dungeons.AbstractDungeon>  SHOP (5%): 3
22:41:25.576 INFO dungeons.AbstractDungeon>  REST (12%): 6
22:41:25.577 INFO dungeons.AbstractDungeon>  TRSRE (0%): 0
22:41:25.577 INFO dungeons.AbstractDungeon>  ELITE (8%): 4
22:41:25.577 INFO dungeons.AbstractDungeon>  EVNT (22%): 11
22:41:25.577 INFO dungeons.AbstractDungeon>  MSTR (53%): 28
22:41:25.583 INFO map.RoomTypeAssigner> #### Unassigned Rooms:
22:41:25.584 INFO map.RoomTypeAssigner> class com.megacrit.cardcrawl.rooms.MonsterRoom
22:41:25.584 INFO map.RoomTypeAssigner> class com.megacrit.cardcrawl.rooms.RestRoom
22:41:25.585 INFO map.RoomTypeAssigner> INFO: Node=(5,13):[(5,14)] was null. Changed to a MonsterRoom.
22:41:25.586 INFO map.RoomTypeAssigner> INFO: Node=(6,13):[(6,14)] was null. Changed to a MonsterRoom.
22:41:25.586 INFO dungeons.AbstractDungeon> Generated the following dungeon map:
22:41:25.586 INFO dungeons.AbstractDungeon>
           /  /   \  \  \
14        R  R     R  R  R
            \  \   |  |  |
13           M  M  M  M  M
             |  |    \|/
12           M  ?     M
               \|   / |
11              ?  M  M
                |/ |    \
10              ?  $     R
              / |/       |
9            ?  R        ?
               \| \      |
8               T  T     T
              /    | \   |
7            M     E  ?  M
           / | \ /      \|
6         R  E  M        R
          |  |/        /
5         E  R        E
          |/ |      / |
4         M  $     M  M
        / |/       |  |
3      M  ?        M  $
       |/ | \        \  \
2      ?  M  M        ?  M
       | \|    \      |/
1      M  ?     ?     M
         \  \     \   |
0         M  M     M  M
22:41:25.588 INFO dungeons.AbstractDungeon> Game Seed: 209772289776443
22:41:25.588 INFO dungeons.AbstractDungeon> Map generation time: 33ms
22:41:25.826 INFO saveAndContinue.SaveFile> Next Room: com.megacrit.cardcrawl.neow.NeowRoom
22:41:26.746 INFO neow.NeowEvent> 0
22:41:27.796 INFO neow.NeowReward> [ERROR] Missing Neow Reward Drawback: NONE
22:41:27.797 INFO basemod.BaseMod> publishMaxHPChange
22:41:28.814 INFO audio.MainMusic> Disposing MainMusic: MENU
22:41:29.516 INFO saveAndContinue.SaveFile> Next Room: com.megacrit.cardcrawl.rooms.MonsterRoom
22:41:29.521 INFO neow.NeowEvent> Disposing Neow asset.
22:41:29.522 INFO dungeons.AbstractDungeon> MONSTER: Small Slimes
22:41:29.759 INFO basemod.BaseMod> publish start battle
22:41:30.398 INFO basemod.BaseMod> publishPostDraw
22:41:30.489 INFO basemod.BaseMod> publishPostDraw
22:41:30.589 INFO basemod.BaseMod> publishPostDraw
22:41:30.689 INFO basemod.BaseMod> publishPostDraw
22:41:30.790 INFO basemod.BaseMod> publishPostDraw
22:41:33.702 INFO basemod.BaseMod> publish on card use: Bash
22:41:33.833 INFO basemod.BaseMod> publish on post power apply
22:41:33.845 INFO basemod.BaseMod> powers modified
22:41:35.084 INFO basemod.BaseMod> publish on card use: Strike_R
22:41:36.411 INFO basemod.BaseMod> ----------- Minion Before Attacking --------------
22:41:36.986 INFO basemod.BaseMod> publishPreMonsterTurn
22:41:37.892 INFO basemod.BaseMod> publish on Player Damaged
22:41:37.901 INFO basemod.BaseMod> publishPreMonsterTurn
22:41:37.902 INFO unlock.UnlockTracker> Already seen: Slimed
22:41:38.809 INFO basemod.BaseMod> publish on Player Damaged
22:41:39.203 INFO basemod.BaseMod> publish on Player Lose Block
22:41:39.204 INFO basemod.BaseMod> publishPostEnergyRecharge
22:41:39.218 INFO basemod.BaseMod> powers modified
22:41:39.435 INFO basemod.BaseMod> publishPostDraw
22:41:39.542 INFO basemod.BaseMod> publishPostDraw
22:41:39.651 INFO basemod.BaseMod> publishPostDraw
22:41:39.752 INFO basemod.BaseMod> publishPostDraw
22:41:39.860 INFO basemod.BaseMod> publishPostDraw
22:41:40.852 INFO basemod.BaseMod> publish on card use: Strike_R
22:41:41.360 INFO basemod.BaseMod> publish on card use: Strike_R
22:41:42.476 INFO monsters.AbstractMonster> Disposed Texture: Spike Slime (M)
22:41:42.785 INFO basemod.BaseMod> publish on card use: Strike_R
22:41:48.883 INFO unlock.UnlockTracker> Already seen: souleater:SoulStealer
22:41:48.883 INFO unlock.UnlockTracker> Already seen: souleater:SoulStealer
22:41:48.890 INFO unlock.UnlockTracker> Already seen: souleater:SoulStealer
22:41:49.022 INFO unlock.UnlockTracker> Already seen: souleater:SoulStealer
22:41:50.963 INFO basemod.BaseMod> publish on card use: souleater:SoulStealer
22:41:51.938 INFO basemod.BaseMod> publish on card use: souleater:SoulStealer
------- Found Soul for Soul of Acid Slime (S) -------
22:41:52.220 INFO unlock.UnlockTracker> Already seen: souleater:AcidSlime_S
22:41:52.221 INFO helpers.CardHelper> No need to track rarity type: SPECIAL
22:41:52.967 INFO basemod.BaseMod> publish post combat
22:41:52.967 INFO basemod.BaseMod> End of battle: Clearing players minions.
22:41:52.967 INFO monsters.AbstractMonster> Disposed Texture: Acid Slime (S)
22:41:53.210 INFO rooms.AbstractRoom> MONSTERS SLAIN 1
22:41:53.212 INFO rooms.AbstractRoom> POTION CHANCE: 40
22:41:53.214 INFO saveAndContinue.SaveFile> Next Room: com.megacrit.cardcrawl.rooms.MonsterRoom
22:41:54.247 INFO unlock.UnlockTracker> Already seen: Twin Strike
22:41:54.247 INFO unlock.UnlockTracker> Already seen: Headbutt
22:41:54.248 INFO unlock.UnlockTracker> Already seen: Body Slam
22:41:56.494 INFO dungeons.AbstractDungeon> Removing monster: Small Slimes from monster list.
22:41:56.495 INFO saveAndContinue.SaveFile> Next Room: com.megacrit.cardcrawl.rooms.MonsterRoom
22:41:56.503 INFO dungeons.AbstractDungeon> MONSTER: Cultist
22:41:56.734 INFO basemod.BaseMod> publish start battle
22:41:57.361 INFO basemod.BaseMod> publishPostDraw
22:41:57.468 INFO basemod.BaseMod> publishPostDraw
22:41:57.568 INFO basemod.BaseMod> publishPostDraw
22:41:57.676 INFO basemod.BaseMod> publishPostDraw
22:41:57.777 INFO basemod.BaseMod> publishPostDraw
22:42:01.571 INFO saveAndContinue.SaveAndContinue> saves\IRONCLAD.autosave was corrupt, loading backup...
22:42:01.574 INFO saveAndContinue.SaveAndContinue> DELETING saves\IRONCLAD.autosave SAVE
22:42:01.574 INFO saveAndContinue.SaveAndContinue> IRONCLAD save INVALID!
22:42:04.462 INFO scenes.AbstractScene> Fading out ambiance: AMBIANCE_BOTTOM
22:42:04.462 INFO dungeons.AbstractDungeon> Resetting variables...
22:42:04.463 INFO monsters.AbstractMonster> Disposed Texture: Cultist
22:42:04.464 INFO core.CardCrawlGame> Dungeon Reset: 1ms
22:42:04.464 INFO core.CardCrawlGame> Shop Screen Rest, Tips Initialize, Metric Data Clear: 0ms
22:42:04.465 INFO unlock.UnlockTracker> RED UNLOCKS:   9/9
22:42:04.465 INFO unlock.UnlockTracker> GREEN UNLOCKS: 9/9
22:42:04.465 INFO unlock.UnlockTracker> BLUE UNLOCKS: 3/9
22:42:04.465 INFO unlock.UnlockTracker> PURPLE UNLOCKS: 0/9
22:42:04.465 INFO unlock.UnlockTracker> RELIC UNLOCKS: 12/24
22:42:04.466 INFO unlock.UnlockTracker> CARDS SEEN:    848/373
22:42:04.466 INFO unlock.UnlockTracker> RELICS SEEN:   156/178
22:42:04.466 INFO UnlockTracker.CountModdedUnlockCards> Counting modded unlocks.
22:42:04.466 INFO basemod.BaseMod> publish post refresh - refreshing unlocks
22:42:04.466 INFO UnlockTracker.CountModdedUnlockCards> Counting modded unlocks.
22:42:04.466 INFO core.CardCrawlGame> Unlock Tracker Refresh:  1ms
22:42:04.466 INFO stats.StatsScreen> Loading character stats.
22:42:04.480 INFO steam.SteamIntegration> unlockAchievement: SHRUG_IT_OFF
22:42:04.481 INFO steam.SteamIntegration> unlockAchievement: COME_AT_ME
22:42:04.481 INFO steam.SteamIntegration> unlockAchievement: THE_PACT
22:42:04.482 INFO steam.SteamIntegration> unlockAchievement: ADRENALINE
22:42:04.482 INFO steam.SteamIntegration> unlockAchievement: JAXXED
22:42:04.482 INFO steam.SteamIntegration> unlockAchievement: IMPERVIOUS
22:42:04.483 INFO steam.SteamIntegration> unlockAchievement: BARRICADED
22:42:04.483 INFO steam.SteamIntegration> unlockAchievement: CATALYST
22:42:04.484 INFO steam.SteamIntegration> unlockAchievement: PLAGUE
22:42:04.484 INFO steam.SteamIntegration> unlockAchievement: INFINITY
22:42:04.485 INFO steam.SteamIntegration> unlockAchievement: PERFECT
22:42:04.485 INFO steam.SteamIntegration> unlockAchievement: ASCEND_0
22:42:04.485 INFO steam.SteamIntegration> unlockAchievement: TRANSIENT
22:42:04.486 INFO steam.SteamIntegration> unlockAchievement: GUARDIAN
22:42:04.486 INFO steam.SteamIntegration> unlockAchievement: GHOST_GUARDIAN
22:42:04.487 INFO steam.SteamIntegration> unlockAchievement: SLIME_BOSS
22:42:04.487 INFO steam.SteamIntegration> unlockAchievement: AUTOMATON
22:42:04.488 INFO steam.SteamIntegration> unlockAchievement: COLLECTOR
22:42:04.488 INFO steam.SteamIntegration> unlockAchievement: CHAMP
22:42:04.489 INFO steam.SteamIntegration> unlockAchievement: CROW
22:42:04.489 INFO steam.SteamIntegration> unlockAchievement: SHAPES
22:42:04.489 INFO steam.SteamIntegration> unlockAchievement: TIME_EATER
22:42:04.490 INFO steam.SteamIntegration> unlockAchievement: RUBY
22:42:04.490 INFO steam.SteamIntegration> unlockAchievement: EMERALD
22:42:04.491 INFO basemod.BaseMod> publishAddCustomModeMods
22:42:04.500 INFO unlock.UnlockTracker> RED UNLOCKS:   9/9
22:42:04.500 INFO unlock.UnlockTracker> GREEN UNLOCKS: 9/9
22:42:04.501 INFO unlock.UnlockTracker> BLUE UNLOCKS: 3/9
22:42:04.501 INFO unlock.UnlockTracker> PURPLE UNLOCKS: 0/9
22:42:04.501 INFO unlock.UnlockTracker> RELIC UNLOCKS: 12/24
22:42:04.501 INFO unlock.UnlockTracker> CARDS SEEN:    848/373
22:42:04.501 INFO unlock.UnlockTracker> RELICS SEEN:   156/178
22:42:04.501 INFO UnlockTracker.CountModdedUnlockCards> Counting modded unlocks.
22:42:04.501 INFO basemod.BaseMod> publish post refresh - refreshing unlocks
22:42:04.501 INFO UnlockTracker.CountModdedUnlockCards> Counting modded unlocks.
22:42:04.501 INFO compendium.CardLibraryScreen> Initializing card library screen.
22:42:04.502 INFO basemod.BaseMod> postCreateStartingRelics for: IRONCLAD
22:42:04.502 INFO basemod.BaseMod> postCreateStartingRelics adding [ Burning Blood ]
22:42:04.531 INFO steam.SSCallback> Stat Stored
22:42:04.531 INFO steam.SSCallback> Stat Stored
22:42:04.531 INFO steam.SSCallback> Stat Stored
22:42:04.532 INFO steam.SSCallback> Stat Stored
22:42:04.532 INFO steam.SSCallback> Stat Stored
22:42:04.532 INFO steam.SSCallback> Stat Stored
22:42:04.532 INFO steam.SSCallback> Stat Stored
22:42:04.532 INFO steam.SSCallback> Stat Stored
22:42:04.532 INFO steam.SSCallback> Stat Stored
22:42:04.532 INFO steam.SSCallback> Stat Stored
22:42:04.533 INFO steam.SSCallback> Stat Stored
22:42:04.533 INFO steam.SSCallback> Stat Stored
22:42:04.533 INFO steam.SSCallback> Stat Stored
22:42:04.533 INFO steam.SSCallback> Stat Stored
22:42:04.533 INFO steam.SSCallback> Stat Stored
22:42:04.533 INFO steam.SSCallback> Stat Stored
22:42:04.533 INFO steam.SSCallback> Stat Stored
22:42:04.533 INFO steam.SSCallback> Stat Stored
22:42:04.534 INFO steam.SSCallback> Stat Stored
22:42:04.534 INFO steam.SSCallback> Stat Stored
22:42:04.534 INFO steam.SSCallback> Stat Stored
22:42:04.534 INFO steam.SSCallback> Stat Stored
22:42:04.534 INFO steam.SSCallback> Stat Stored
22:42:04.534 INFO steam.SSCallback> Stat Stored
22:42:04.541 INFO characters.CharacterManager> Successfully recreated IRONCLAD
22:42:04.541 INFO basemod.BaseMod> postCreateStartingRelics for: THE_SILENT
22:42:04.542 INFO basemod.BaseMod> postCreateStartingRelics adding [ Ring of the Snake ]
22:42:04.574 INFO characters.CharacterManager> Successfully recreated THE_SILENT
22:42:04.574 INFO basemod.BaseMod> postCreateStartingRelics for: DEFECT
22:42:04.575 INFO basemod.BaseMod> postCreateStartingRelics adding [ Cracked Core ]
22:42:04.610 INFO characters.CharacterManager> Successfully recreated DEFECT
22:42:04.611 INFO basemod.BaseMod> postCreateStartingRelics for: WATCHER
22:42:04.611 INFO basemod.BaseMod> postCreateStartingRelics adding [ PureWater ]
22:42:04.649 INFO characters.CharacterManager> Successfully recreated WATCHER
22:42:04.649 INFO saveAndContinue.SaveAndContinue> IRONCLAD save does NOT exist!
22:42:04.650 INFO saveAndContinue.SaveAndContinue> THE_SILENT save does NOT exist!
22:42:04.650 INFO saveAndContinue.SaveAndContinue> DEFECT save does NOT exist!
22:42:04.650 INFO saveAndContinue.SaveAndContinue> WATCHER save does NOT exist!
22:42:04.650 INFO unlock.UnlockTracker> Ascension Progress: 0.083333336
22:42:04.650 INFO unlock.UnlockTracker> Unlock IC: 6
22:42:04.650 INFO unlock.UnlockTracker> Unlock Silent: 6
22:42:04.650 INFO unlock.UnlockTracker> Unlock Defect: 0
22:42:04.650 INFO unlock.UnlockTracker> Unlock Watcher: 0
22:42:04.650 INFO unlock.UnlockTracker> Unlock Progress: 0.6666667
22:42:04.651 INFO unlock.UnlockTracker> Achievement Progress: 0.5217391
22:42:04.651 INFO unlock.UnlockTracker> Seen Cards Progress: 0.6989247
22:42:04.651 INFO unlock.UnlockTracker> Seen Relics Progress: 0.74157304
22:42:04.651 INFO core.CardCrawlGame> New Main Menu Screen: 185ms
22:42:04.652 INFO helpers.CardHelper> Clearing CardHelper (obtained cards)
22:42:04.652 INFO core.CardCrawlGame> [GC] BEFORE: 722224976
22:42:04.794 INFO core.CardCrawlGame> [GC] AFTER: 84064232
22:42:04.794 INFO core.CardCrawlGame> New Transition Screen, Tip Tracker Refresh: 142ms
22:42:06.818 INFO audio.MainMusic> Disposing MainMusic: Exordium
22:42:09.202 INFO core.CardCrawlGame> PAUSE()
